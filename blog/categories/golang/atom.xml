<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: golang | Faster and Faster]]></title>
  <link href="http://makotow.github.io/blog/categories/golang/atom.xml" rel="self"/>
  <link href="http://makotow.github.io/"/>
  <updated>2014-06-28T17:34:36+09:00</updated>
  <id>http://makotow.github.io/</id>
  <author>
    <name><![CDATA[Makoto WATANABE (makotow)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[テストデータのログファイルを簡単につくれる。(apache access.log編)]]></title>
    <link href="http://makotow.github.io/blog/2014/06/28/access-log-generator/"/>
    <updated>2014-06-28T16:45:00+09:00</updated>
    <id>http://makotow.github.io/blog/2014/06/28/access-log-generator</id>
    <content type="html"><![CDATA[<p>とあるログを解析してDBに入れて色々するツールを作っているのだけども
そのテストをするためある程度大きめのテストデータが欲しくて探してみた。
結果的に apache-loggen という gem があったので紹介。</p>

<!-- more -->

<h2> Contents </h2>
<ul id="markdown-toc">
  <li><a href="#section">割と大きめのテストデータを作りたい</a></li>
  <li><a href="#apache-loggen">apache-loggen</a>    <ul>
      <li><a href="#section-1">インストール</a></li>
      <li><a href="#section-2">使い方</a></li>
      <li><a href="#section-3">データ作成</a></li>
    </ul>
  </li>
  <li><a href="#section-4">まとめ</a></li>
</ul>

<h2 id="section">割と大きめのテストデータを作りたい</h2>

<p>少しさがしてなければ自作しようとおもてたけど、
軽く探してみるとニーズにあったものを見つけたので紹介。</p>

<h2 id="apache-loggen">apache-loggen</h2>

<p>githubに登録されているのである程度真似していろいろなことができると思う。</p>

<p><a href="https://github.com/tamtam180/apache_log_gen">tamtam180/apache_log_gen</a></p>

<h3 id="section-1">インストール</h3>

<p>rubygemsに登録されているのでgemで一発。</p>

<pre><code>gem install apache-loggen
</code></pre>

<h3 id="section-2">使い方</h3>

<p>今回はある程度のサイズのログが欲しかったのであまり細かいところまでは調べていないけど、
help見ると秒間のレコード生成数やローテションも指定できるのでログ関連のテストに使えるなという印象。</p>

<pre><code>$ apache-loggen --help
Usage: apache-loggen [options]
        --limit=COUNT                最大何件出力するか。デフォルトは0で無制限。
        --rate=RATE                  毎秒何レコード生成するか。デフォルトは0で流量制限無し。
        --rotate=SECOND              ローテーションする間隔。デフォルトは0。
        --progress                   レートの表示をする。
        --json                       json形式の出力
</code></pre>

<h3 id="section-3">データ作成</h3>

<p>とりあえず、100件データと10000000件データを作成してみた。</p>

<pre><code>apache-loggen --progress --rate=10 --limit=100 access-short.log

apache-loggen --progress --limit=10000000 access.log
</code></pre>

<p>ログの内容もあるランダムに出力してくれる。</p>

<pre><code>104.177.44.55 - - [28/Jun/2014:02:20:49 +0900] "GET /category/electronics HTTP/1.1" 200 105 "-" "Mozilla/5.0 (Windows NT 6.0; rv:10.0.1) Gecko/20100101 Firefox/10.0.1"
184.129.76.75 - - [28/Jun/2014:02:20:49 +0900] "GET /category/games HTTP/1.1" 200 92 "-" "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:10.0.1) Gecko/20100101 Firefox/10.0.1"
212.102.35.194 - - [28/Jun/2014:02:20:49 +0900] "GET /item/networking/264 HTTP/1.1" 200 82 "/category/electronics" "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.7 (KHTML, like Gecko) Chrome/16.
</code></pre>

<h2 id="section-4">まとめ</h2>

<p>手軽に apache の access.log を作ることができた。
help を見るとリアルタイムに流れるログに対するテストなどにも使えるのではないかと思う。</p>
]]></content>
  </entry>
  
</feed>
