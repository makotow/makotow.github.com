<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Faster and Faster]]></title>
  <link href="http://makotow.github.io/atom.xml" rel="self"/>
  <link href="http://makotow.github.io/"/>
  <updated>2014-12-07T01:52:27+09:00</updated>
  <id>http://makotow.github.io/</id>
  <author>
    <name><![CDATA[Makoto WATANABE (makotow)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[新しいブログを作った件]]></title>
    <link href="http://makotow.github.io/blog/2014/12/07/starting-new-blog/"/>
    <updated>2014-12-07T00:55:00+09:00</updated>
    <id>http://makotow.github.io/blog/2014/12/07/starting-new-blog</id>
    <content type="html"><![CDATA[<p>前回のエントリからしばらくたったけど、
新しいブログを作ってみました。</p>

<p>今回は新しく作ったブログのテクノロジ周りを照会したいと思います。</p>

<h2 id="tldr">TL;DR</h2>

<p>Ghostの環境をAWSに作ったらたくさん新しいテクノロジーの勉強ができてできることが増えた。</p>

<!-- more -->

<h2> Contents </h2>
<ul id="markdown-toc">
  <li><a href="#tldr">TL;DR</a></li>
  <li><a href="#section">ブログプラットフォーム</a></li>
  <li><a href="#section-1">サーバ環境</a></li>
  <li><a href="#nodejs">Nodejs</a></li>
  <li><a href="#ubuntu">Ubuntu</a></li>
  <li><a href="#vagrant">Vagrant</a>    <ul>
      <li><a href="#multivm-">MultiVM 機能</a></li>
      <li><a href="#provisioning">Provisioning</a></li>
      <li><a href="#plugin">plugin</a></li>
    </ul>
  </li>
  <li><a href="#section-2">テスト</a>    <ul>
      <li><a href="#serverspec">ServerSpec</a></li>
    </ul>
  </li>
  <li><a href="#section-3">その他</a></li>
</ul>

<p>新しいブログはこちらのURLです。</p>

<ul>
  <li><a href="http://blog.amakotow.com">makotow’s blog</a></li>
</ul>

<h2 id="section">ブログプラットフォーム</h2>

<p>予定していたとおり <a href="https://ghost.org/">Ghost</a>を使うようにしてみた。
見た目のシンプルさと綺麗さに惹かれました。</p>

<p>Octopressでも良いのだけど、日本語周りでエラーになってパブリッシュできないことや、
リリースバージョンにタグがなかったり（masterが最新）という状態でメンテナンスがしづらいなどなどあって乗り換えを検討。</p>

<p>こちらはこちらで残し、うまい棲み分けを考えていきます。</p>

<h2 id="section-1">サーバ環境</h2>

<p>AWSを使っています。
Digital Ocean も選択肢として考えましたが結果的にはAWSとなりました。
理由としてはAWSの各種サービスを使ってみたかったというのと、
現在無料期間中ということが大きな理由です。</p>

<p>AWSで構築した場合、主に以下のサービスを使用しています。
ブログのドメインはムームードメインで取得したものをRoute53でホストしています。</p>

<ul>
  <li>EC2</li>
  <li>Route53</li>
  <li>VPC</li>
  <li>EIP</li>
  <li>etc</li>
</ul>

<h2 id="nodejs">Nodejs</h2>

<p>GhostはNode.jsで動作しています。</p>

<p>Node.jsのプロセスをバックグラウンドで動作させるため
forever, supervisor, pm2, upstart, /etc/init でデーモン化を検討しました。
やりたいことをシンプルに実現できたため、今回はforeverを使用しました。</p>

<p>pm2 のほうがクラスタリングなどの機能があり高機能のようです。
foreverでまかないきれなくなったらpm2も検討する予定。</p>

<h2 id="ubuntu">Ubuntu</h2>

<p>OS は Ubuntu を使用。
AWS使うならAmazon Linuxを使うのがいいと考えてやってました。<br />
テスト時にAmazon Linuxをローカル使う方法がわからなかったのでCentOSかUbuntu2択で
AMIの関係上Ubuntuを選びました。</p>

<h2 id="vagrant">Vagrant</h2>

<p>今回はAWSに構築する前にローカルでテストして、ある程度形になったらAWSへデプロイしました。
テクノロジーとしてVagrantを使用しました。</p>

<h3 id="multivm-">MultiVM 機能</h3>

<p>これが使いたかったVagrantを使った。<br />
vagrant upコマンドの引数で環境ごとにprovisioningとかできる。</p>

<ul>
  <li>vagrnat up remote – AWSにデプロイ</li>
  <li>vagrnat up local  – ローカル環境にデプロイ</li>
</ul>

<p>OSのインストールからすると up に結構時間かかった。<br />
Dockerでやったら時間がかからずに起動できるのかなと思います。</p>

<h3 id="provisioning">Provisioning</h3>

<p>OS起動後に自動プロビジョニングは、今回はshell scriptを使用しました。  </p>

<p>本当は chef, ansibleでやりたかったが環境構築ばかりに時間がかかってしまうのでは
本末転倒と思い最速でできるshell script を使用しました。</p>

<p>chef, ansible版は作ってみようと思います。</p>

<h3 id="plugin">plugin</h3>

<p>いま見ると開発時のプラグインは以下のものを入れていたようで、個人的にはhostsupdaterがとても便利でした。<br />
Vagrantを起動するとhostsファイルに追加してくれる。</p>

<ul>
  <li>vagrant-aws (0.5.0)</li>
  <li>vagrant-digitalocean (0.7.0)</li>
  <li>vagrant-hostsupdater (0.0.11)</li>
  <li>vagrant-login (1.0.1, system)</li>
  <li>vagrant-omnibus (1.4.1)</li>
  <li>vagrant-share (1.1.2, system)</li>
</ul>

<h2 id="section-2">テスト</h2>

<p>他にも技術的なチャレンジとしてVagrantで自動構築したものに対して
テストすることにもチャレンジしてみました。</p>

<h3 id="serverspec">ServerSpec</h3>

<p>rake のタスクとして spec を作成</p>

<pre><code>rake spec
</code></pre>

<p>を実行してテストを走らせながらすすめ、テストのリズム、感触をつかむことが出来ました。</p>

<h2 id="section-3">その他</h2>

<p>ドメインの取得やらを行って、DNSの仕組みなどもやもやしてたものがなんとなく理解できました。
せっかくなのでもっと体系的に学べるといいなと思いました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ブログプラットフォームの変更を考えている。]]></title>
    <link href="http://makotow.github.io/blog/2014/09/02/move-to-ghost/"/>
    <updated>2014-09-02T01:29:00+09:00</updated>
    <id>http://makotow.github.io/blog/2014/09/02/move-to-ghost</id>
    <content type="html"><![CDATA[<p>octopressから別のプラットフォームへの移行を考えている。</p>

<p>今のところ候補なのはghost。</p>

<p>つらつらと思っていることを書いていく。</p>

<h2 id="section">ブログプラットフォームの移行</h2>

<p>octopressでもいいのだけど、飽きてきたのとghostを見た時の洗練されたデザインに一目惚れ。</p>

<p>また、ghost出たばかりの頃はまだいいかなと思ってたけど、最近見てみたらいい感じになってた。</p>

<p>他にも候補としてはhugo,middlemanなど検討したけどもghostが一番面倒が少なさそう。</p>

<h3 id="section-1">テーマの変更</h3>

<p>ぱっと見素敵なテーマはたくさんあるのだけども、
以下のものは足りないかなと思っている。</p>

<ul>
  <li>コメント(ほぼつかわないけど…、様式美として)</li>
  <li>Recent Entry</li>
  <li>twitter, githubとかのガジェット？（シンプルなghostがごちゃごちゃしてしまうかもしれない。）</li>
  <li>about me</li>
  <li>octopress からの記事移行</li>
  <li>octopress のこれからの運用（tech memoメイン？）</li>
  <li>etc</li>
</ul>

<h2 id="aws-ordigital-ocean">AWS or　Digital Ocean?</h2>

<p>ghostに移行するとなった場合、node.jsが使える環境が必要になるので
上記の、クラウドプラットフォーム、VPSを使う必要がでてくる。</p>

<p>ghost 本家のドキュメントではDigital Oceanはghostのインストーラを用意しているらしい。</p>

<p>AWSはEC２とEIPがあればそれとなく使える気がするし、少しは勘があるのでいいかなと思っている。</p>

<h2 id="chef-terraform-capistrano-ansible-">Chef, Terraform, Capistrano, Ansible などなど</h2>

<p>せっかくなので上記のインフラ自動化ツールを導入してみたい。 
Immutable Infrastructure　の考え方を取り込んで環境構築をしたい。  </p>

<h3 id="circle-ci-travis-">Circle CI, travis とか</h3>

<p>github にプッシュすると自動でCIが走って、
ある一定の条件を満たすと記事公開とか。</p>

<h2 id="section-2">ドメイン名の取得</h2>

<p>ドメインの取得初めてのなので学ぶ。</p>

<p>今のところ候補はこんな感じ</p>

<ul>
  <li>makotow-tech-blog.com</li>
  <li>makotow-tech-blog.info</li>
  <li>blog.makotow.com</li>
</ul>

<p>普通はどんな感じでつけるのかよくわからなかった。
独自ドメインの人は代替こんな感じ。</p>

<h2 id="section-3">課題はたくさんある。</h2>

<p>つらつらとやってみたいことを書いてみた。<br />
やらないといけないことはたくさんあるので
とりあえずはホスティング先とローカルでのテーマの作成をやってみる。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[#golang　設定値をどうするか？(設定ファイル読み込み編)]]></title>
    <link href="http://makotow.github.io/blog/2014/07/29/golang-setting-from-file/"/>
    <updated>2014-07-29T00:12:00+09:00</updated>
    <id>http://makotow.github.io/blog/2014/07/29/golang-setting-from-file</id>
    <content type="html"><![CDATA[<p>golangを書いて設定値としたいものが出てきた時にどうするのがよいのか？</p>

<p>ふとプログラムを書いていて気になってきたため調べてみた。<br />
少しずつアウトプットということで今回はjson ファイルから読み込みを試す。</p>

<!-- more -->

<h2> Contents </h2>
<ul id="markdown-toc">
  <li><a href="#section">方法</a></li>
  <li><a href="#github">Githubのパス</a></li>
</ul>

<h2 id="section">方法</h2>

<ul>
  <li><a href="http://qiita.com/umisama/items/c2a8db6c23db18dd5437#2-4">【翻訳】プロダクション環境でのベストプラクティス 設定値の扱い</a></li>
  <li><a href="http://blog.starbug1.com/archives/994">Golangで設定ファイルの読み込み</a></li>
</ul>

<p>を参考</p>

<p>設定値を読み込む方法としては３つの方法があるようだ。</p>

<ol>
  <li>設定ファイル読み込み</li>
  <li>GOENVを設定しos.GetEnvを使用</li>
  <li>flag パッケージを使う方法</li>
</ol>

<p>今回は1つ目の「設定ファイル読み込み」を試してみた。</p>

<p>コードは<a href="http://blog.starbug1.com/archives/994">Golangで設定ファイルの読み込み</a>を写経させていただいた。<br />
struct で json と同じ構造を作り、json をアンマーシャリングする。（JavaのJAXBみたい）</p>

<p>jsonファイルのkey名とsturctの変数名の付け方。どちらも同じ名前にしておけば自動でマッピングしてくれる。(同じでない場合はstructの方でマッピングする。）<br />
ORMのgorpと同じような感じ。</p>

<p>参考：　<a href="http://qiita.com/oahiroaki/items/ff21d9adfb843161d1d8">golangでのjsonのデコード</a>　を写経</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
</pre></td><td class="code"><pre><code class="go"><span class="line"><span class="kn">package</span> <span class="nx">setting</span>
</span><span class="line">
</span><span class="line"><span class="kn">import</span> <span class="p">(</span>
</span><span class="line">     <span class="s">&quot;io/ioutil&quot;</span>
</span><span class="line">     <span class="s">&quot;fmt&quot;</span>
</span><span class="line">     <span class="s">&quot;encoding/json&quot;</span>
</span><span class="line"><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="kd">type</span> <span class="nx">Config</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class="line">     <span class="nx">Id</span> <span class="kt">int</span>
</span><span class="line">     <span class="nx">Name</span> <span class="kt">string</span>
</span><span class="line">     <span class="nx">Array</span> <span class="p">[]</span><span class="kt">int</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="kd">func</span> <span class="nx">Parse</span><span class="p">(</span><span class="nx">filename</span> <span class="kt">string</span><span class="p">)</span> <span class="p">(</span><span class="nx">Config</span><span class="p">,</span> <span class="kt">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">     <span class="kd">var</span> <span class="nx">c</span> <span class="nx">Config</span>
</span><span class="line">     <span class="nx">jsonString</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">ioutil</span><span class="p">.</span><span class="nx">ReadFile</span><span class="p">(</span><span class="nx">filename</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">     <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class="line">          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;error: %v &quot;</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
</span><span class="line">          <span class="k">return</span> <span class="nx">c</span><span class="p">,</span> <span class="nx">err</span>
</span><span class="line">     <span class="p">}</span>
</span><span class="line">     <span class="nx">err</span> <span class="p">=</span> <span class="nx">json</span><span class="p">.</span><span class="nx">Unmarshal</span><span class="p">(</span><span class="nx">jsonString</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">c</span><span class="p">)</span>
</span><span class="line">     <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span><span class="line">          <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;error: %v &quot;</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
</span><span class="line">          <span class="k">return</span> <span class="nx">c</span><span class="p">,</span> <span class="nx">err</span>
</span><span class="line">     <span class="p">}</span>
</span><span class="line">     <span class="k">return</span> <span class="nx">c</span> <span class="p">,</span> <span class="kc">nil</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="github">Githubのパス</h2>

<p>今回のソースはgithubにpush済み<br />
setting_test.go から実行。</p>

<ul>
  <li><a href="https://github.com/makotow/golang-study/blob/4980ad9857e7a0ae67c45d1d261ddac294043e5c/setting/JsonSetting.go">setting.go</a></li>
  <li><a href="https://github.com/makotow/golang-study/blob/4980ad9857e7a0ae67c45d1d261ddac294043e5c/setting/JsonSetting_test.go">setting_test.go</a></li>
  <li><a href="https://github.com/makotow/golang-study/blob/4980ad9857e7a0ae67c45d1d261ddac294043e5c/setting/setting.json">setting.json</a></li>
</ul>

<p>次は GOENV を使ってみようと思う。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OSX hydra 紹介 （5%くらいの作業効率UPを目指す） ]]></title>
    <link href="http://makotow.github.io/blog/2014/07/27/osx-hydra/"/>
    <updated>2014-07-27T22:45:00+09:00</updated>
    <id>http://makotow.github.io/blog/2014/07/27/osx-hydra</id>
    <content type="html"><![CDATA[<p>ウィンドウのリサイズ、移動、フォーカス切り替えをするために、
マジックトラックパッドに手をのばすのがだるいときがある。</p>

<p>今回紹介するツールはそのだるさを解決してくれて、かつ、5％くらい作業効率を上げてくれる可能性があるので導入してみた。</p>

<p><a href="http://hackhydra.com/">Hydra</a></p>

<p><img src="https://raw.githubusercontent.com/sdegutis/hydra/master/Hydra/XcodeCrap/Images.xcassets/AppIcon.appiconset/icon_128x128.png" />               </p>

<blockquote><p>Hack your OS X desktop environment</p></blockquote>

<!-- more -->

<h2> Contents </h2>
<ul id="markdown-toc">
  <li><a href="#section">インストール</a></li>
  <li><a href="#section-1">設定</a></li>
  <li><a href="#section-2">できること</a></li>
  <li><a href="#section-3">類似</a></li>
  <li><a href="#section-4">最後に</a></li>
</ul>

<h2 id="section">インストール</h2>

<p>hydra 自体は github から zip をダウンロードして /Applicationへ配置</p>

<p>hydra は brew cask でもインストール可能らしいが今のところ問題が起きる可能性が多いらしい（<a href="https://github.com/sdegutis/hydra#faq">FAQ</a>記載）</p>

<p>hydra-cli は brew でインストール</p>

<pre><code>brew install hydra-cli
</code></pre>

<h2 id="section-1">設定</h2>

<p>設定ファイルはlua(!) でかく</p>

<p>書き方はインストールした時点でsampleがあるのでそれを見ながら書いていく。
本家のサンプル</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
</pre></td><td class="code"><pre><code class="lua"><span class="line"><span class="c1">-- Hi!</span>
</span><span class="line"><span class="c1">-- Save this as ~/.hydra/init.lua and choose Reload Config from the menu (or press cmd-alt-ctrl R}</span>
</span><span class="line">
</span><span class="line"><span class="c1">-- show an alert to let you know Hydra&#39;s running</span>
</span><span class="line"><span class="n">hydra</span><span class="p">.</span><span class="n">alert</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">Hydra sample config loaded&quot;</span><span class="p">,</span> <span class="mf">1.5</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c1">-- open a repl with mash-R; requires https://github.com/sdegutis/hydra-cli</span>
</span><span class="line"><span class="n">hotkey</span><span class="p">.</span><span class="n">bind</span><span class="p">({</span><span class="s2">&quot;</span><span class="s">cmd&quot;</span><span class="p">,</span> <span class="s2">&quot;</span><span class="s">ctrl&quot;</span><span class="p">,</span> <span class="s2">&quot;</span><span class="s">alt&quot;</span><span class="p">},</span> <span class="s2">&quot;</span><span class="s">R&quot;</span><span class="p">,</span> <span class="n">repl</span><span class="p">.</span><span class="n">open</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c1">-- show a helpful menu</span>
</span><span class="line"><span class="n">hydra</span><span class="p">.</span><span class="n">menu</span><span class="p">.</span><span class="n">show</span><span class="p">(</span><span class="k">function</span><span class="p">()</span>
</span><span class="line">    <span class="kd">local</span> <span class="n">t</span> <span class="o">=</span> <span class="p">{</span>
</span><span class="line">      <span class="p">{</span><span class="n">title</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">Reload Config&quot;</span><span class="p">,</span> <span class="n">fn</span> <span class="o">=</span> <span class="n">hydra</span><span class="p">.</span><span class="n">reload</span><span class="p">},</span>
</span><span class="line">      <span class="p">{</span><span class="n">title</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">Open REPL&quot;</span><span class="p">,</span> <span class="n">fn</span> <span class="o">=</span> <span class="n">repl</span><span class="p">.</span><span class="n">open</span><span class="p">},</span>
</span><span class="line">      <span class="p">{</span><span class="n">title</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">-&quot;</span><span class="p">},</span>
</span><span class="line">      <span class="p">{</span><span class="n">title</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">About Hydra&quot;</span><span class="p">,</span> <span class="n">fn</span> <span class="o">=</span> <span class="n">hydra</span><span class="p">.</span><span class="n">showabout</span><span class="p">},</span>
</span><span class="line">      <span class="p">{</span><span class="n">title</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">Check for Updates...&quot;</span><span class="p">,</span> <span class="n">fn</span> <span class="o">=</span> <span class="k">function</span><span class="p">()</span> <span class="n">hydra</span><span class="p">.</span><span class="n">updates</span><span class="p">.</span><span class="n">check</span><span class="p">(</span><span class="kc">nil</span><span class="p">,</span> <span class="kc">true</span><span class="p">)</span> <span class="k">end</span><span class="p">},</span>
</span><span class="line">      <span class="p">{</span><span class="n">title</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">Quit&quot;</span><span class="p">,</span> <span class="n">fn</span> <span class="o">=</span> <span class="nb">os.exit</span><span class="p">},</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">
</span><span class="line">    <span class="k">if</span> <span class="ow">not</span> <span class="n">hydra</span><span class="p">.</span><span class="n">license</span><span class="p">.</span><span class="n">haslicense</span><span class="p">()</span> <span class="k">then</span>
</span><span class="line">      <span class="nb">table.insert</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="p">{</span><span class="n">title</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">Buy or Enter License...&quot;</span><span class="p">,</span> <span class="n">fn</span> <span class="o">=</span> <span class="n">hydra</span><span class="p">.</span><span class="n">license</span><span class="p">.</span><span class="n">enter</span><span class="p">})</span>
</span><span class="line">      <span class="nb">table.insert</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="p">{</span><span class="n">title</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">-&quot;</span><span class="p">})</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">
</span><span class="line">    <span class="k">return</span> <span class="n">t</span>
</span><span class="line"><span class="k">end</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c1">-- move the window to the right half of the screen</span>
</span><span class="line"><span class="k">function</span> <span class="nf">movewindow_righthalf</span><span class="p">()</span>
</span><span class="line">  <span class="kd">local</span> <span class="n">win</span> <span class="o">=</span> <span class="n">window</span><span class="p">.</span><span class="n">focusedwindow</span><span class="p">()</span>
</span><span class="line">  <span class="kd">local</span> <span class="n">newframe</span> <span class="o">=</span> <span class="n">win</span><span class="p">:</span><span class="n">screen</span><span class="p">():</span><span class="n">frame_without_dock_or_menu</span><span class="p">()</span>
</span><span class="line">  <span class="n">newframe</span><span class="p">.</span><span class="n">w</span> <span class="o">=</span> <span class="n">newframe</span><span class="p">.</span><span class="n">w</span> <span class="o">/</span> <span class="mi">2</span>
</span><span class="line">  <span class="n">newframe</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="n">newframe</span><span class="p">.</span><span class="n">x</span> <span class="o">+</span> <span class="n">newframe</span><span class="p">.</span><span class="n">w</span> <span class="c1">-- comment out this line to push it to left half of screen</span>
</span><span class="line">  <span class="n">win</span><span class="p">:</span><span class="n">setframe</span><span class="p">(</span><span class="n">newframe</span><span class="p">)</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1">-- bind your custom function to a convenient hotkey</span>
</span><span class="line"><span class="c1">-- note: it&#39;s good practice to keep hotkey-bindings separate from their functions, like we&#39;re doing here</span>
</span><span class="line"><span class="n">hotkey</span><span class="p">.</span><span class="n">new</span><span class="p">({</span><span class="s2">&quot;</span><span class="s">cmd&quot;</span><span class="p">,</span> <span class="s2">&quot;</span><span class="s">ctrl&quot;</span><span class="p">,</span> <span class="s2">&quot;</span><span class="s">alt&quot;</span><span class="p">},</span> <span class="s2">&quot;</span><span class="s">L&quot;</span><span class="p">,</span> <span class="n">movewindow_righthalf</span><span class="p">):</span><span class="n">enable</span><span class="p">()</span>
</span><span class="line">
</span><span class="line"><span class="c1">-- uncomment this line if you want Hydra to make sure it launches at login</span>
</span><span class="line"><span class="c1">-- hydra.autolaunch.set(true)</span>
</span><span class="line">
</span><span class="line"><span class="c1">-- when the &quot;update is available&quot; notification is clicked, open the website</span>
</span><span class="line"><span class="n">notify</span><span class="p">.</span><span class="n">register</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">showupdate&quot;</span><span class="p">,</span> <span class="k">function</span><span class="p">()</span> <span class="nb">os.execute</span><span class="p">(</span><span class="s1">&#39;</span><span class="s">open https://github.com/sdegutis/Hydra/releases&#39;</span><span class="p">)</span> <span class="k">end</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c1">-- check for updates every week, and also right now (when first launching)</span>
</span><span class="line"><span class="n">timer</span><span class="p">.</span><span class="n">new</span><span class="p">(</span><span class="n">timer</span><span class="p">.</span><span class="n">weeks</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span> <span class="n">hydra</span><span class="p">.</span><span class="n">updates</span><span class="p">.</span><span class="n">check</span><span class="p">):</span><span class="n">start</span><span class="p">()</span>
</span><span class="line"><span class="n">hydra</span><span class="p">.</span><span class="n">updates</span><span class="p">.</span><span class="n">check</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-2">できること</h2>

<p>ウィンドウの操作をバインドしたキーでできる。</p>

<p>Github の gif を見るとやれることが直感的にわかる。</p>

<p><a href="https://github.com/sdegutis/hydra#screenshots">Hydra Screenshots</a></p>

<h2 id="section-3">類似</h2>

<ul>
  <li><a href="https://github.com/jigish/slate">Slate</a></li>
</ul>

<p>が類似としてあげられる。</p>

<p>hydra本家の<a href="https://github.com/sdegutis/hydra#faq">FAQ</a>にも
目指すところは似ていると記載があり。</p>

<p>APIをみて好みの方を選んでねと書いてある。</p>

<p>リソースの一覧 github の本家にリンクあり。</p>

<ul>
  <li><a href="https://github.com/sdegutis/hydra#resources">Resources</a></li>
  <li><a href="http://hackhydra.com/docs/">Hydra API</a></li>
</ul>

<p>API見ると hotkey 以外にもたくさんあるので色々できそう</p>

<h2 id="section-4">最後に</h2>

<p>すぐになにかを便利にするという用途よりは
日常で使う操作を設定ファイルに追加していき育てていくのがいいのではないかと思いました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[テストデータのログファイルを簡単につくれる。(apache access.log編)]]></title>
    <link href="http://makotow.github.io/blog/2014/06/28/access-log-generator/"/>
    <updated>2014-06-28T16:45:00+09:00</updated>
    <id>http://makotow.github.io/blog/2014/06/28/access-log-generator</id>
    <content type="html"><![CDATA[<p>とあるログを解析してDBに入れて色々するツールを作っているのだけども
そのテストをするためある程度大きめのテストデータが欲しくて探してみた。
結果的に apache-loggen という gem があったので紹介。</p>

<!-- more -->

<h2> Contents </h2>
<ul id="markdown-toc">
  <li><a href="#section">割と大きめのテストデータを作りたい</a></li>
  <li><a href="#apache-loggen">apache-loggen</a>    <ul>
      <li><a href="#section-1">インストール</a></li>
      <li><a href="#section-2">使い方</a></li>
      <li><a href="#section-3">データ作成</a></li>
    </ul>
  </li>
  <li><a href="#section-4">まとめ</a></li>
</ul>

<h2 id="section">割と大きめのテストデータを作りたい</h2>

<p>少しさがしてなければ自作しようとおもてたけど、
軽く探してみるとニーズにあったものを見つけたので紹介。</p>

<h2 id="apache-loggen">apache-loggen</h2>

<p>githubに登録されているのである程度真似していろいろなことができると思う。</p>

<p><a href="https://github.com/tamtam180/apache_log_gen">tamtam180/apache_log_gen</a></p>

<h3 id="section-1">インストール</h3>

<p>rubygemsに登録されているのでgemで一発。</p>

<pre><code>gem install apache-loggen
</code></pre>

<h3 id="section-2">使い方</h3>

<p>今回はある程度のサイズのログが欲しかったのであまり細かいところまでは調べていないけど、
help見ると秒間のレコード生成数やローテションも指定できるのでログ関連のテストに使えるなという印象。</p>

<pre><code>$ apache-loggen --help
Usage: apache-loggen [options]
        --limit=COUNT                最大何件出力するか。デフォルトは0で無制限。
        --rate=RATE                  毎秒何レコード生成するか。デフォルトは0で流量制限無し。
        --rotate=SECOND              ローテーションする間隔。デフォルトは0。
        --progress                   レートの表示をする。
        --json                       json形式の出力
</code></pre>

<h3 id="section-3">データ作成</h3>

<p>とりあえず、100件データと10000000件データを作成してみた。</p>

<pre><code>apache-loggen --progress --rate=10 --limit=100 access-short.log

apache-loggen --progress --limit=10000000 access.log
</code></pre>

<p>ログの内容もあるランダムに出力してくれる。</p>

<pre><code>104.177.44.55 - - [28/Jun/2014:02:20:49 +0900] "GET /category/electronics HTTP/1.1" 200 105 "-" "Mozilla/5.0 (Windows NT 6.0; rv:10.0.1) Gecko/20100101 Firefox/10.0.1"
184.129.76.75 - - [28/Jun/2014:02:20:49 +0900] "GET /category/games HTTP/1.1" 200 92 "-" "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:10.0.1) Gecko/20100101 Firefox/10.0.1"
212.102.35.194 - - [28/Jun/2014:02:20:49 +0900] "GET /item/networking/264 HTTP/1.1" 200 82 "/category/electronics" "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.7 (KHTML, like Gecko) Chrome/16.
</code></pre>

<h2 id="section-4">まとめ</h2>

<p>手軽に apache の access.log を作ることができた。
help を見るとリアルタイムに流れるログに対するテストなどにも使えるのではないかと思う。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BrewfileでHomebrewパッケージ管理 その後]]></title>
    <link href="http://makotow.github.io/blog/2014/06/15/brewfile-2/"/>
    <updated>2014-06-15T16:18:00+09:00</updated>
    <id>http://makotow.github.io/blog/2014/06/15/brewfile-2</id>
    <content type="html"><![CDATA[<p>過去記事（<a href="http://makotow.github.io/blog/2014/02/05/brewfile/">Brewfileでパッケージ管理</a>）の続きです。</p>

<p>導入後Brewfileの機能についてキャッチアップはしてなかったのですが、
仕様が変わってBrewfileが綺麗に書けるようになっていたり過去記事に書いていたことが間違っているのが判明したため、
綺麗に書き直してみました。</p>

<!-- more -->

<h2> Contents </h2>
<ul id="markdown-toc">
  <li><a href="#section">動機</a></li>
  <li><a href="#section-1">環境</a></li>
  <li><a href="#section-2">作ったファイル</a></li>
  <li><a href="#section-3">課題？</a></li>
</ul>

<h2 id="section">動機</h2>

<p>cask に upgradeがなかった（過去記事の間違い）のと、
cask の仕様変更で返り値がErrorではなくWarningになったりとかでもっとスッキリ書けるようになったので書きなおしてみた。</p>

<h2 id="section-1">環境</h2>

<p>以前とは環境が変わっているため念のため。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>brew &#8211;config </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
</pre></td><td class="code"><pre><code class=""><span class="line">-&gt; % brew --config
</span><span class="line">HOMEBREW_VERSION: 0.9.5
</span><span class="line">ORIGIN: https://github.com/Homebrew/homebrew
</span><span class="line">HEAD: 98dc2cdb64256dfa4529bfce03447e4e52507c28
</span><span class="line">HOMEBREW_PREFIX: /usr/local
</span><span class="line">HOMEBREW_CELLAR: /usr/local/Cellar
</span><span class="line">CPU: quad-core 64-bit haswell
</span><span class="line">OS X: 10.9.3-x86_64
</span><span class="line">Xcode: 5.1.1
</span><span class="line">CLT: 5.1.0.0.1.1396320587
</span><span class="line">GCC-4.2: build 5666
</span><span class="line">Clang: 5.1 build 503
</span><span class="line">X11: 2.7.6 =&gt; /opt/X11
</span><span class="line">System Ruby: 2.0.0-451
</span><span class="line">Perl: /usr/bin/perl
</span><span class="line">Python: /usr/local/bin/python =&gt; /usr/local/Cellar/python/2.7.7_2/Frameworks/Python.framework/Versions/2.7/bin/python2.7
</span><span class="line">Ruby: /usr/local/opt/rbenv/shims/ruby =&gt; /usr/local/Cellar/rbenv/0.4.0/shims/ruby</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-2">作ったファイル</h2>

<p>tap xxx || true とか
install XXX || upgrade XXX || true
がなくなってスッキリ。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Brewfile</span><a href="https://gist.github.com/makotow/203a4d9d79eb7cb9ba81">link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
<span class="line-number">89</span>
<span class="line-number">90</span>
<span class="line-number">91</span>
<span class="line-number">92</span>
<span class="line-number">93</span>
<span class="line-number">94</span>
<span class="line-number">95</span>
<span class="line-number">96</span>
<span class="line-number">97</span>
<span class="line-number">98</span>
<span class="line-number">99</span>
<span class="line-number">100</span>
<span class="line-number">101</span>
<span class="line-number">102</span>
<span class="line-number">103</span>
<span class="line-number">104</span>
<span class="line-number">105</span>
<span class="line-number">106</span>
<span class="line-number">107</span>
<span class="line-number">108</span>
<span class="line-number">109</span>
<span class="line-number">110</span>
<span class="line-number">111</span>
<span class="line-number">112</span>
<span class="line-number">113</span>
<span class="line-number">114</span>
<span class="line-number">115</span>
<span class="line-number">116</span>
<span class="line-number">117</span>
<span class="line-number">118</span>
<span class="line-number">119</span>
<span class="line-number">120</span>
<span class="line-number">121</span>
<span class="line-number">122</span>
<span class="line-number">123</span>
<span class="line-number">124</span>
<span class="line-number">125</span>
<span class="line-number">126</span>
<span class="line-number">127</span>
<span class="line-number">128</span>
<span class="line-number">129</span>
<span class="line-number">130</span>
<span class="line-number">131</span>
<span class="line-number">132</span>
<span class="line-number">133</span>
<span class="line-number">134</span>
<span class="line-number">135</span>
<span class="line-number">136</span>
<span class="line-number">137</span>
<span class="line-number">138</span>
<span class="line-number">139</span>
<span class="line-number">140</span>
<span class="line-number">141</span>
<span class="line-number">142</span>
<span class="line-number">143</span>
<span class="line-number">144</span>
<span class="line-number">145</span>
<span class="line-number">146</span>
<span class="line-number">147</span>
<span class="line-number">148</span>
<span class="line-number">149</span>
<span class="line-number">150</span>
<span class="line-number">151</span>
<span class="line-number">152</span>
<span class="line-number">153</span>
<span class="line-number">154</span>
<span class="line-number">155</span>
<span class="line-number">156</span>
<span class="line-number">157</span>
<span class="line-number">158</span>
<span class="line-number">159</span>
<span class="line-number">160</span>
<span class="line-number">161</span>
<span class="line-number">162</span>
<span class="line-number">163</span>
<span class="line-number">164</span>
<span class="line-number">165</span>
</pre></td><td class="code"><pre><code class=""><span class="line"># latest
</span><span class="line">update
</span><span class="line">
</span><span class="line"># update all
</span><span class="line">upgrade
</span><span class="line">
</span><span class="line"># add repository
</span><span class="line">tap homebrew/binary
</span><span class="line">tap caskroom/cask
</span><span class="line">tap homebrew/dupes
</span><span class="line">tap homebrew/science
</span><span class="line">tap jimbojsb/launchrocket
</span><span class="line">
</span><span class="line"># for X
</span><span class="line">cask install xquartz
</span><span class="line">
</span><span class="line"># install package
</span><span class="line">install ack
</span><span class="line">install ant
</span><span class="line">install apple-gcc42
</span><span class="line">install atk
</span><span class="line">install autoconf
</span><span class="line">install automake
</span><span class="line">install bash
</span><span class="line">install boost
</span><span class="line">install brew-cask
</span><span class="line">install cairo
</span><span class="line">install cloog
</span><span class="line">install cmatrix
</span><span class="line">install colordiff
</span><span class="line">install cscope
</span><span class="line">install emacs
</span><span class="line">install fontconfig
</span><span class="line">install fontforge
</span><span class="line">install fortune
</span><span class="line">install freetype
</span><span class="line">install gdbm
</span><span class="line">install gdk-pixbuf
</span><span class="line">install gettext
</span><span class="line">install git
</span><span class="line">install git-flow
</span><span class="line">install giter8
</span><span class="line">install glib
</span><span class="line">install gmp
</span><span class="line">install go --cross-compile-all
</span><span class="line">install gobject-introspection
</span><span class="line">install gradle
</span><span class="line">install groovy
</span><span class="line">install gtk+
</span><span class="line">install gtksourceview
</span><span class="line">install harfbuzz
</span><span class="line">install haskell-platform
</span><span class="line">install htop-osx
</span><span class="line">install hub
</span><span class="line">install icu4c
</span><span class="line">install intltool
</span><span class="line">install isl
</span><span class="line">install jmeter
</span><span class="line">install jpeg
</span><span class="line">install less
</span><span class="line">install libevent
</span><span class="line">install libffi
</span><span class="line">install libmpc
</span><span class="line">install libpng
</span><span class="line">install libtiff
</span><span class="line">install libtool
</span><span class="line">install libyaml
</span><span class="line">install lv
</span><span class="line">install macvim
</span><span class="line">install markdown
</span><span class="line">install maven
</span><span class="line">install meld
</span><span class="line">install mercurial
</span><span class="line">install mpfr
</span><span class="line">install mysql
</span><span class="line">install neon
</span><span class="line">install nkf
</span><span class="line">install nmap
</span><span class="line">install node
</span><span class="line">install openssl
</span><span class="line">install ossp-uuid
</span><span class="line">install pango
</span><span class="line">install pcre
</span><span class="line">install pixman
</span><span class="line">install pkg-config
</span><span class="line">install play
</span><span class="line">install postgresql
</span><span class="line">install pow
</span><span class="line">install pstree
</span><span class="line">install py2cairo
</span><span class="line">install pygobject
</span><span class="line">install pygtk
</span><span class="line">install pygtksourceview
</span><span class="line">install python
</span><span class="line">install rarian
</span><span class="line">install rbenv
</span><span class="line">install readline
</span><span class="line">install reattach-to-user-namespace
</span><span class="line">install ruby-build
</span><span class="line">install sbt
</span><span class="line">install scala
</span><span class="line">install scons
</span><span class="line">install source-highlight
</span><span class="line">install sqlite
</span><span class="line">install subversion
</span><span class="line">install sysdig
</span><span class="line">install the_silver_searcher
</span><span class="line">install tig
</span><span class="line">install tmux
</span><span class="line">install tomcat
</span><span class="line">install tree
</span><span class="line">install vim
</span><span class="line">install watch
</span><span class="line">install wget
</span><span class="line">install xctool
</span><span class="line">install xz
</span><span class="line">install yuicompressor
</span><span class="line">install z
</span><span class="line">install zsh
</span><span class="line">install zsh-completions
</span><span class="line">install docker
</span><span class="line">install boot2docker
</span><span class="line">install jenkins
</span><span class="line">install coreutils
</span><span class="line">install fsharp
</span><span class="line">install zlib
</span><span class="line">
</span><span class="line"># brew cask
</span><span class="line">cask install alfred
</span><span class="line">cask install diffmerge
</span><span class="line">cask install rstudio
</span><span class="line">cask install vagrant
</span><span class="line">cask install vlc
</span><span class="line">cask install dash
</span><span class="line">cask install p4merge
</span><span class="line">cask install sourcetree
</span><span class="line">cask install virtualbox
</span><span class="line">cask install xmind
</span><span class="line">cask install wireshark
</span><span class="line">cask install google-drive
</span><span class="line">cask install google-web-designer
</span><span class="line">cask install --caskroom=/Applications google-chrome
</span><span class="line">cask install keyremap4macbook
</span><span class="line">cask install skype
</span><span class="line">cask install skitch
</span><span class="line">cask install bettertouchtool
</span><span class="line">cask install dropbox
</span><span class="line">cask install evernote
</span><span class="line">cask install mysqlworkbench
</span><span class="line">cask install iterm2
</span><span class="line">cask install appcleaner
</span><span class="line">cask install emacs
</span><span class="line">cask install launchrocket
</span><span class="line">cask install atom
</span><span class="line">cask install hyperswitch
</span><span class="line">cask install sophos-anti-virus-home-edition
</span><span class="line">cask install vmware-fusion
</span><span class="line">cask install airmail
</span><span class="line">cask install google-japanese-ime
</span><span class="line">cask install onyx
</span><span class="line">## for alfred
</span><span class="line">cask alfred link
</span><span class="line">
</span><span class="line"># cleanup
</span><span class="line">cleanup</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-3">課題？</h2>

<p>よくわからないパッケージがあったりするので
不要なものは適宜削除してメンテしていきたい。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ブログタイトル変えました]]></title>
    <link href="http://makotow.github.io/blog/2014/06/11/change-blog-title/"/>
    <updated>2014-06-11T23:18:00+09:00</updated>
    <id>http://makotow.github.io/blog/2014/06/11/change-blog-title</id>
    <content type="html"><![CDATA[<h2> Contents </h2>
<ul id="markdown-toc">
  <li><a href="#section">ブログタイトル変更</a></li>
  <li><a href="#section-1">理由とか想い</a></li>
  <li><a href="#section-2">ついでに</a></li>
</ul>

<h2 id="section">ブログタイトル変更</h2>

<p>「Software Technology Memorandum and thoughts」から
「Faster and Faster」 に変更しました。</p>

<p>有名ブログでもないしこれからも気持ちが変わればバンバン変えていこうと思います。</p>

<h2 id="section-1">理由とか想い</h2>

<p>前のタイトルは「Software Technology Memorandum and thoughts」でした。
ブログの内容を表すタイトルとしてそのまま書いていました。</p>

<p>これからは「こうなりたい」という思いを込めて変えてみました。</p>

<pre><code>速く、もっと速く
</code></pre>

<p>仕事を始めてある程度年数もたち、諸先輩方ほど経験は積んでいないけれどもひと通りは社会に適応できるようになって思ったのが、
速いことは何事においてもいいことだと最近強く思うようになりました。</p>

<p>これからも自分は速さを重要視して、何事においても「もっと速く」という思いを忘れないようにブログタイトルを変更してみました。</p>

<h2 id="section-2">ついでに</h2>

<p>ブログデザインも変えてみました。
かなりミニマルになったのではないかと思います。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OSX のキーバインド周り]]></title>
    <link href="http://makotow.github.io/blog/2014/06/11/macosx-keybinding/"/>
    <updated>2014-06-11T23:17:00+09:00</updated>
    <id>http://makotow.github.io/blog/2014/06/11/macosx-keybinding</id>
    <content type="html"><![CDATA[<p>WWDC 2014 で Macbook Pro は新しく発表されないようだったので、
少し前に Macbook Pro 13 インチを購入してみました。</p>

<p>brew, brew-cask でソフトウェアの導入は自動化済み（<a href="http://makotow.github.io/blog/2014/02/05/brewfile/">Brewfileでパッケージ管理</a>）
 、設定ファイル一式は github から clone 、またはDropboxの同期でセットアップできたので特に苦労した覚えはなかったが、
使いはじめるとOSX周りのキーバインドの設定を自動化できてなかったので備忘のためメモ。</p>

<p>OSX設定の自動化もおできるといいのだけれども今のところ見つからず。</p>

<!-- more -->

<h2> Contents </h2>
<ul id="markdown-toc">
  <li><a href="#section">キーバインド、設定など</a>    <ul>
      <li><a href="#mission-">Mission コントロール</a></li>
      <li><a href="#spotlight-">spotlight バインド変更</a></li>
      <li><a href="#keyremap4macbook">KeyRemap4MacBook</a></li>
      <li><a href="#controlcaps-lock-">Control　を　Caps Lock に割り当て</a></li>
      <li><a href="#trackpad">Trackpad　</a></li>
    </ul>
  </li>
</ul>

<h2 id="section">キーバインド、設定など</h2>

<h3 id="mission-">Mission コントロール</h3>

<p>Ctrl　＋　→、Ctrl + ←　でスペースの移動ができるが無効に設定</p>

<p>System Preferences &gt; Keyboard &gt; Shortcut &gt; Mission Control &gt; Mission Controlの
Move left a space, Move right a space のチェックを外す</p>

<h3 id="spotlight-">spotlight バインド変更</h3>

<p>Ctrl + Space に割り当てらているので、
F1に再割当て</p>

<p>System Preferences &gt; Keyboard &gt; Shortcut &gt; Spotlight &gt; Show Spotlight search field
をF1へ。</p>

<h3 id="keyremap4macbook">KeyRemap4MacBook</h3>

<ul>
  <li>英字、日本語入力の切り替え（USキーボードのため）</li>
  <li>Fn に Cmd　を割り当て</li>
  <li>option(右側）にFnを割り当て</li>
</ul>

<p><img src="http://makotow.github.io/images/2014/06/KeyRemap4MacBook.png" /></p>

<h3 id="controlcaps-lock-">Control　を　Caps Lock に割り当て</h3>

<p>System Preferences &gt; Keyboard &gt; Modifier Keys </p>

<p>Caps Lock を Controlへする。</p>

<h3 id="trackpad">Trackpad　</h3>

<p>System Preferences &gt; Point &amp; Click &gt; Three Finger drag にチェックを入れる。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Virtual Box ゲストから外部ネットワークにつながらない（解決済み）]]></title>
    <link href="http://makotow.github.io/blog/2014/05/05/cannot-connect-to-virtulbox-guest-through-nat/"/>
    <updated>2014-05-05T18:12:00+09:00</updated>
    <id>http://makotow.github.io/blog/2014/05/05/cannot-connect-to-virtulbox-guest-through-nat</id>
    <content type="html"><![CDATA[<p>WEB+DB Press vol80 の「テスト駆動インフラ」を写経中に遭遇した名前解決が出来なかった事象に対する対処方法。</p>

<p>結果的には Virtual Box の設定を変更することで対応出来たので備忘録。</p>

<div class="amazlet-box" style="margin-bottom:0px;"><div class="amazlet-image" style="float:left;margin:0px 12px 1px 0px;"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4774163988/makotownotes-22/ref=nosim/" name="amazletlink" target="_blank"><img src="http://ecx.images-amazon.com/images/I/61vP1yUfkZL._SL160_.jpg" alt="WEB+DB PRESS Vol.80" style="border: none;" /></a></div><div class="amazlet-info" style="line-height:120%; margin-bottom: 10px"><div class="amazlet-name" style="margin-bottom:10px;line-height:120%"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4774163988/makotownotes-22/ref=nosim/" name="amazletlink" target="_blank">WEB+DB PRESS Vol.80</a><div class="amazlet-powered-date" style="font-size:80%;margin-top:5px;line-height:120%">posted with <a href="http://www.amazlet.com/" title="amazlet" target="_blank">amazlet</a> at 14.05.04</div></div><div class="amazlet-detail">鶴長 鎮一 宮下 剛輔 縣 俊貴 中村 知成 西尾 泰和 新井 俊一 南川 毅文 伊藤 直也 石垣 憲一 浅木 朗 渡邊 恵太 中島 聡 はまちや2 竹原 川添 貴生 河合 宜文 <br />技術評論社 <br />売り上げランキング: 463<br /></div><div class="amazlet-sub-info" style="float: left;"><div class="amazlet-link" style="margin-top: 5px"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4774163988/makotownotes-22/ref=nosim/" name="amazletlink" target="_blank">Amazon.co.jpで詳細を見る</a></div></div></div><div class="amazlet-footer" style="clear: left"></div></div>

<p>今回使ったソフトウェアのバージョン</p>

<pre><code>OSX: 10.9.2
Vagrant: 1.5.4
ruby: 2.1.0p0
VirtualBox: 4.3.10-93012
Guest OS: CentOS 6.4
</code></pre>

<!-- more -->

<h2> Contents </h2>
<ul id="markdown-toc">
  <li><a href="#webdb-vol80-ci">WEB+DB vol80 のインフラCIを写経中に遭遇</a>    <ul>
      <li><a href="#puppet--rpm-">puppet を rpm でインストールするところでエラー</a></li>
      <li><a href="#section">原因解析</a></li>
      <li><a href="#section-1">対応</a></li>
      <li><a href="#section-2">解決</a></li>
    </ul>
  </li>
</ul>

<h2 id="webdb-vol80-ci">WEB+DB vol80 のインフラCIを写経中に遭遇</h2>

<p>vagrant ファイルやらプロビジョニングに必要なもの（puppetのインストールとか）を作成後に</p>

<pre><code>vagrant up
</code></pre>

<p>実行してしばらく放置してた。</p>

<p>結果画面を見ると puppet がインストール失敗しているメッセージが出力されて仮想マシンはブートされていた。</p>

<h3 id="puppet--rpm-">puppet を rpm でインストールするところでエラー</h3>

<p>出力ログを見ていくとpuppetだけではなくて CentOSのイメージをダウンロードするところでもhostが見つからない旨のエラーメッセージが出力されていた。</p>

<h3 id="section">原因解析</h3>

<p>仮想マシンは作成されておりsshでログインできるためゲストOSで調査をする。</p>

<p>出力されているエラーからネットワークにつながらないと推測できた。</p>

<p>ping を適当な FQDN へ打ってみたが返答がないため推測はあっているようだ。</p>

<p>ネットワークつながらないということは、</p>

<ul>
  <li>F/Wではじいている(F/W相当のフィルタ機能など)</li>
  <li>名前解決ができていないということ</li>
</ul>

<p>が考えられるので、
とりあえず F/W が原因ではないことの切り分けをするため、iptables のサービスを停止して再度 ping。</p>

<p>想定通り事象は解決しないので再度 iptables のサービスを起動。</p>

<p>次は名前解決をできるようにすれば事象は解決すること確認するため、</p>

<p>DNS を明示的に Google Public DNSへ向けてみる（8.8.8.8,8.8.4.4)</p>

<p>/etc/sysconfig/network-scripts/ifcfg-eth0 へ以下を追加し、</p>

<pre><code>DNS1=8.8.8.8
DNS2=8.8.4.4
</code></pre>

<p>network サービスを再起動</p>

<pre><code>sudo service network restart
</code></pre>

<p>/etc/resolve.conf の nameserver に 8.8.8.8 と 8.8.4.4 が登録されているのを確認。
(NIC起動時に ifcfg-eth0 へ追加した DNS のアドレスが /etc/resolve.conf へ書き込まれる)</p>

<p>ping は通るようになった。</p>

<p>名前解決が根本の原因なのでどこで対応するか考える。
OS の プロビジョニング中に起きているのでそれ以前で対処しないといけない。</p>

<h3 id="section-1">対応</h3>

<p>プロビジョニング中に起きている事象なので puppet の設定で書くのには違和感を感じた。
vagrantで対応できないか探ってみた。</p>

<p>調べてみると VirtualBox のネットワーク設定が NAT の場合のDNSの挙動に関する設定が VirtualBox 自体に存在していた。
Vagrantファイルに設定を追加することで対応完了。 <sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>

<ul>
  <li>参照URL
    <ul>
      <li><a href="http://www.virtualbox.org/manual/ch09.html#nat-adv-dns">9.11.5. Enabling DNS proxy in NAT mode</a></li>
      <li><a href="http://www.virtualbox.org/manual/ch09.html#nat_host_resolver_proxy">9.11.6. Using the host’s resolver as a DNS proxy in NAT mode</a></li>
    </ul>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="no">Vagrant</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="s2">&quot;2&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class="line">  <span class="c1"># add for dns</span>
</span><span class="line">  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provider</span> <span class="ss">:virtualbox</span> <span class="k">do</span> <span class="o">|</span><span class="n">vb</span><span class="o">|</span>
</span><span class="line">    <span class="n">vb</span><span class="o">.</span><span class="n">customize</span> <span class="o">[</span><span class="s2">&quot;modifyvm&quot;</span><span class="p">,</span> <span class="ss">:id</span><span class="p">,</span> <span class="s2">&quot;--natdnshostresolver1&quot;</span><span class="p">,</span> <span class="s2">&quot;on&quot;</span><span class="o">]</span>
</span><span class="line">    <span class="n">vb</span><span class="o">.</span><span class="n">customize</span> <span class="o">[</span><span class="s2">&quot;modifyvm&quot;</span><span class="p">,</span> <span class="ss">:id</span><span class="p">,</span> <span class="s2">&quot;--natdnsproxy1&quot;</span><span class="p">,</span> <span class="s2">&quot;on&quot;</span><span class="o">]</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">  <span class="err">…</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-2">解決</h3>

<p>仮想マシンを破棄してプロビジョニングし直す。</p>

<p>puppet のインストール完了し無事テストが出来るようになった。</p>

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>どちらかを設定すれば動作するように見えたがどちらも on にしないと通信ができなかった。<a href="#fnref:1" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[20140415時点の近況]]></title>
    <link href="http://makotow.github.io/blog/2014/04/15/tech201404/"/>
    <updated>2014-04-15T00:16:00+09:00</updated>
    <id>http://makotow.github.io/blog/2014/04/15/tech201404</id>
    <content type="html"><![CDATA[<p>２ヶ月記事更新なしだったので近況とか。</p>

<!-- more -->

<h2> Contents </h2>
<ul id="markdown-toc">
  <li><a href="#section">2014年にはいってから注目しているテクノロジー</a>    <ul>
      <li><a href="#aws-amazon-web-services">AWS (Amazon Web Services)</a></li>
      <li><a href="#scala">Scala</a></li>
      <li><a href="#go-lang">Go Lang</a></li>
      <li><a href="#fsharp">FSharp</a></li>
    </ul>
  </li>
  <li><a href="#section-1">その他</a></li>
</ul>

<h2 id="section">2014年にはいってから注目しているテクノロジー</h2>

<p>今年に入ってから興味を持って本格的に追い始めたもの。</p>

<p>今更感があるかもしれないけども記録しておく。</p>

<h3 id="aws-amazon-web-services">AWS (Amazon Web Services)</h3>

<p>言わずもがなクラウド環境。
現段階では一択だと思っている。（エンタープライズ用途としても）</p>

<p>個人的にEC2を使い始めてみた。</p>

<p>作ったアプリを動かしたりデータ収集したりするサーバにしたいと思ってる。</p>

<p>検証環境としての使用も模索中。</p>

<h3 id="scala">Scala</h3>

<p>もう何年も前からやっている。ある程度の規模のアプリを作ったりはしていなかったので現在作成中
Scala + JavaFX8 でクライアントアプリを作成中</p>

<p>１つ作ったあとはMacOSXのDiffアプリを作ってみたい。</p>

<h3 id="go-lang">Go Lang</h3>

<p>最近流行っていたのでキャッチアップ。
言語仕様とかまだ把握しきれていない。</p>

<h3 id="fsharp">FSharp</h3>

<p>Mac上に環境作ってHello Worldレベル。
ものにするというかは新しい観点を身につけるために学習する。</p>

<h2 id="section-1">その他</h2>

<ul>
  <li>読書記録も１年近く書いていないので復活させようと思います。</li>
  <li>git とか sbt についてはなんとなくレベルアップ。</li>
  <li>IntelliJ IDEA をほぼ毎日使ってる。ライセンス分くらいは使っているはず。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Brewfileでパッケージ管理]]></title>
    <link href="http://makotow.github.io/blog/2014/02/05/brewfile/"/>
    <updated>2014-02-05T00:15:00+09:00</updated>
    <id>http://makotow.github.io/blog/2014/02/05/brewfile</id>
    <content type="html"><![CDATA[<h3 id="section">2014/06/15 追記</h3>

<p>cask に upgradeがなかったのと、
cask の仕様変更とかで返り値がErrorではなくWarningになったりとかでもっとスッキリ書けるようになったので
別記事にてアップデートしました。<a href="http://makotow.github.io/blog/2014/06/15/brewfile-2/">BrewfileでHomebrewパッケージ管理 その後</a></p>

<p>追記、ここまで。</p>

<p>今まで、Mac上のアプリケーションはbrew listの出力結果、 /Application配下の一覧で管理していたがhomebrew標準機能でファイルに書いたパッケージを一括してインストールできるBrewfileを使ってみました。
ほとんどこのページを参考にさせていただきました。</p>

<p><a href="http://blog.livedoor.jp/sonots/archives/35251881.html">「BrewfileでHomebrewパッケージを管理する」をやってみた</a></p>

<!-- more -->

<h2> Contents </h2>
<ul id="markdown-toc">
  <li><a href="#section">2014/06/15 追記</a></li>
  <li><a href="#section-1">動機</a></li>
  <li><a href="#section-2">環境</a></li>
  <li><a href="#section-3">使い方</a></li>
  <li><a href="#section-4">留意点</a></li>
  <li><a href="#section-5">作ったファイル</a></li>
  <li><a href="#section-6">まとめ</a></li>
</ul>

<h2 id="section-1">動機</h2>

<p>たまたまツイートを見てたらBrewfileなるものが目についたため homebrew標準でできるようなのでやってみた。
最近導入した brew-cask もこれで管理できる。</p>

<h2 id="section-2">環境</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>brew &#8211;config </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
</pre></td><td class="code"><pre><code class=""><span class="line">-&gt; % brew --config
</span><span class="line">HOMEBREW_VERSION: 0.9.5
</span><span class="line">ORIGIN: https://github.com/Homebrew/homebrew.git
</span><span class="line">HEAD: 406d954664c33e2a23e8e95f016f644e66829ef4
</span><span class="line">HOMEBREW_PREFIX: /usr/local
</span><span class="line">HOMEBREW_CELLAR: /usr/local/Cellar
</span><span class="line">CPU: quad-core 64-bit ivybridge
</span><span class="line">OS X: 10.9.1-x86_64
</span><span class="line">Xcode: 5.0.2
</span><span class="line">CLT: 5.0.1.0.1.1382131676
</span><span class="line">GCC-4.2: build 5666
</span><span class="line">Clang: 5.0 build 500
</span><span class="line">X11: 2.7.5 =&gt; /opt/X11
</span><span class="line">System Ruby: 1.8.7-358
</span><span class="line">Perl: /usr/bin/perl
</span><span class="line">Python: /usr/local/bin/python =&gt; /usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/bin/python2.7
</span><span class="line">Ruby: /usr/local/opt/rbenv/shims/ruby =&gt; /usr/local/Cellar/rbenv/0.4.0/shims/ruby</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-3">使い方</h2>

<p>Brewfile のあるディレクトリで</p>

<pre><code>brew bundle
</code></pre>

<p>でBrewfileに書かれているパッケージがインストールされる。</p>

<p>brew cask を使っているところはパスワードを聞かれることもあるので都度入力</p>

<h2 id="section-4">留意点</h2>

<p>参考ページにもあるがBrewfileないで</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>tup </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">tup phinze/homebrew-cask</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>を実行した際にすでに追加されているリポジトリだと途中で止まってしまう。</p>

<p>なので</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>tup2 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">tup phinze/homebrew-cask || true</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>おなじように、install するときに formulaが消えてたり、古いバージョンがあると途中で止まってしまうため
以下のように編集</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>install </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">install X ||  brew upgrade X || true</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-5">作ったファイル</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Brewfile</span><a href="https://gist.github.com/makotow/8804694">link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
<span class="line-number">89</span>
<span class="line-number">90</span>
<span class="line-number">91</span>
<span class="line-number">92</span>
<span class="line-number">93</span>
<span class="line-number">94</span>
<span class="line-number">95</span>
<span class="line-number">96</span>
<span class="line-number">97</span>
<span class="line-number">98</span>
<span class="line-number">99</span>
<span class="line-number">100</span>
<span class="line-number">101</span>
<span class="line-number">102</span>
<span class="line-number">103</span>
<span class="line-number">104</span>
<span class="line-number">105</span>
<span class="line-number">106</span>
<span class="line-number">107</span>
<span class="line-number">108</span>
<span class="line-number">109</span>
<span class="line-number">110</span>
<span class="line-number">111</span>
<span class="line-number">112</span>
<span class="line-number">113</span>
<span class="line-number">114</span>
<span class="line-number">115</span>
<span class="line-number">116</span>
<span class="line-number">117</span>
<span class="line-number">118</span>
<span class="line-number">119</span>
<span class="line-number">120</span>
<span class="line-number">121</span>
<span class="line-number">122</span>
<span class="line-number">123</span>
<span class="line-number">124</span>
<span class="line-number">125</span>
<span class="line-number">126</span>
<span class="line-number">127</span>
<span class="line-number">128</span>
<span class="line-number">129</span>
<span class="line-number">130</span>
<span class="line-number">131</span>
<span class="line-number">132</span>
<span class="line-number">133</span>
<span class="line-number">134</span>
<span class="line-number">135</span>
<span class="line-number">136</span>
<span class="line-number">137</span>
<span class="line-number">138</span>
<span class="line-number">139</span>
<span class="line-number">140</span>
<span class="line-number">141</span>
<span class="line-number">142</span>
<span class="line-number">143</span>
<span class="line-number">144</span>
</pre></td><td class="code"><pre><code class=""><span class="line"># latest
</span><span class="line">update
</span><span class="line">
</span><span class="line"># add repository
</span><span class="line">tap homebrew/binary || true
</span><span class="line">tap phinze/homebrew-cask || true
</span><span class="line">tap homebrew/dupes || true
</span><span class="line">tap homebrew/science || true
</span><span class="line">
</span><span class="line"># install package
</span><span class="line">
</span><span class="line">install ack || brew upgrade ack || true
</span><span class="line">install ant || brew upgrade ant || true
</span><span class="line">install apple-gcc42 || brew upgrade apple-gcc42 || true
</span><span class="line">install atk || brew upgrade atk || true
</span><span class="line">install autoconf || brew upgrade autoconf || true
</span><span class="line">install automake || brew upgrade automake || true
</span><span class="line">install bash || brew upgrade bash || true
</span><span class="line">install boost || brew upgrade boost || true
</span><span class="line">install brew-cask || brew upgrade brew-cask || true
</span><span class="line">install cairo || brew upgrade cairo || true
</span><span class="line">install cloog || brew upgrade cloog || true
</span><span class="line">install cmatrix || brew upgrade cmatrix || true
</span><span class="line">install colordiff || brew upgrade colordiff || true
</span><span class="line">install cscope || brew upgrade cscope || true
</span><span class="line">install emacs || brew upgrade emacs || true
</span><span class="line">install fontconfig || brew upgrade fontconfig || true
</span><span class="line">install fontforge || brew upgrade fontforge || true
</span><span class="line">install fortune || brew upgrade fortune || true
</span><span class="line">install freetype || brew upgrade freetype || true
</span><span class="line">install gdbm || brew upgrade gdbm || true
</span><span class="line">install gdk-pixbuf || brew upgrade gdk-pixbuf || true
</span><span class="line">install gettext || brew upgrade gettext || true
</span><span class="line">install gfortran || brew upgrade gfortran || true
</span><span class="line">install ghc || brew upgrade ghc || true
</span><span class="line">install git || brew upgrade git || true
</span><span class="line">install git-flow || brew upgrade git-flow || true
</span><span class="line">install giter8 || brew upgrade giter8 || true
</span><span class="line">install glib || brew upgrade glib || true
</span><span class="line">install gmp || brew upgrade gmp || true
</span><span class="line">install go --cross-compile-all || brew upgrade go || true
</span><span class="line">install gobject-introspection || brew upgrade gobject-introspection || true
</span><span class="line">install gradle || brew upgrade gradle || true
</span><span class="line">install groovy || brew upgrade groovy || true
</span><span class="line">install gtk+ || brew upgrade gtk+ || true
</span><span class="line">install gtksourceview || brew upgrade gtksourceview || true
</span><span class="line">install harfbuzz || brew upgrade harfbuzz || true
</span><span class="line">install haskell-platform || brew upgrade haskell-platform || true
</span><span class="line">install htop-osx || brew upgrade htop-osx || true
</span><span class="line">install hub || brew upgrade hub || true
</span><span class="line">install icu4c || brew upgrade icu4c || true
</span><span class="line">install intltool || brew upgrade intltool || true
</span><span class="line">install isl || brew upgrade isl || true
</span><span class="line">install jmeter || brew upgrade jmeter || true
</span><span class="line">install jpeg || brew upgrade jpeg || true
</span><span class="line">install less || brew upgrade less || true
</span><span class="line">install libevent || brew upgrade libevent || true
</span><span class="line">install libffi || brew upgrade libffi || true
</span><span class="line">install libmpc || brew upgrade libmpc || true
</span><span class="line">install libpng || brew upgrade libpng || true
</span><span class="line">install libtiff || brew upgrade libtiff || true
</span><span class="line">install libtool || brew upgrade libtool || true
</span><span class="line">install libyaml || brew upgrade libyaml || true
</span><span class="line">install lv || brew upgrade lv || true
</span><span class="line">install macvim || brew upgrade macvim || true
</span><span class="line">install markdown || brew upgrade markdown || true
</span><span class="line">install maven || brew upgrade maven || true
</span><span class="line">install meld || brew upgrade meld || true
</span><span class="line">install mercurial || brew upgrade mercurial || true
</span><span class="line">install mpfr || brew upgrade mpfr || true
</span><span class="line">install mysql || brew upgrade mysql || true
</span><span class="line">install neon || brew upgrade neon || true
</span><span class="line">install nkf || brew upgrade nkf || true
</span><span class="line">install nmap || brew upgrade nmap || true
</span><span class="line">install node || brew upgrade node || true
</span><span class="line">install openssl || brew upgrade openssl || true
</span><span class="line">install ossp-uuid || brew upgrade ossp-uuid || true
</span><span class="line">install pango || brew upgrade pango || true
</span><span class="line">install pcre || brew upgrade pcre || true
</span><span class="line">install pixman || brew upgrade pixman || true
</span><span class="line">install pkg-config || brew upgrade pkg-config || true
</span><span class="line">install play || brew upgrade play || true
</span><span class="line">install postgresql || brew upgrade postgresql || true
</span><span class="line">install pow || brew upgrade pow || true
</span><span class="line">install pstree || brew upgrade pstree || true
</span><span class="line">install py2cairo || brew upgrade py2cairo || true
</span><span class="line">install pygobject || brew upgrade pygobject || true
</span><span class="line">install pygtk || brew upgrade pygtk || true
</span><span class="line">install pygtksourceview || brew upgrade pygtksourceview || true
</span><span class="line">install python || brew upgrade python || true
</span><span class="line">install rarian || brew upgrade rarian || true
</span><span class="line">install rbenv || brew upgrade rbenv || true
</span><span class="line">install readline || brew upgrade readline || true
</span><span class="line">install reattach-to-user-namespace || brew upgrade reattach-to-user-namespace || true
</span><span class="line">install ruby-build || brew upgrade ruby-build || true
</span><span class="line">install sbt || brew upgrade sbt || true
</span><span class="line">install scala || brew upgrade scala || true
</span><span class="line">install scons || brew upgrade scons || true
</span><span class="line">install serf || brew upgrade serf || true
</span><span class="line">install source-highlight || brew upgrade source-highlight || true
</span><span class="line">install sqlite || brew upgrade sqlite || true
</span><span class="line">install subversion || brew upgrade subversion || true
</span><span class="line">install the_silver_searcher || brew upgrade the_silver_searcher || true
</span><span class="line">install tig || brew upgrade tig || true
</span><span class="line">install tmux || brew upgrade tmux || true
</span><span class="line">install tomcat || brew upgrade tomcat || true
</span><span class="line">install tree || brew upgrade tree || true
</span><span class="line">install vim || brew upgrade vim || true
</span><span class="line">install watch || brew upgrade watch || true
</span><span class="line">install wget || brew upgrade wget || true
</span><span class="line">install xctool || brew upgrade xctool || true
</span><span class="line">install xz || brew upgrade xz || true
</span><span class="line">install yuicompressor || brew upgrade yuicompressor || true
</span><span class="line">install z || brew upgrade z || true
</span><span class="line">install zsh || brew upgrade zsh || true
</span><span class="line">install zsh-completions || brew upgrade zsh-completions || true
</span><span class="line">
</span><span class="line"># brew cask
</span><span class="line">cask install alfred || cask upgrade alfred || true
</span><span class="line">cask install diffmerge || cask upgrade diffmerge || true
</span><span class="line">cask install rstudio || cask upgrade rstudio || true
</span><span class="line">cask install vagrant || cask upgrade vagrant || true
</span><span class="line">cask install vlc || cask upgrade vlc || true
</span><span class="line">cask install dash || cask upgrade dash || true
</span><span class="line">cask install p4merge || cask upgrade p4merge || true
</span><span class="line">cask install sourcetree || cask upgrade sourcetree || true
</span><span class="line">cask install virtualbox || cask upgrade virtualbox || true
</span><span class="line">cask install xquartz || cask upgrade xquartz || true
</span><span class="line">cask install xmind || cask upgrade xmind || true
</span><span class="line">cask install wireshark || cask upgrade wireshark || true
</span><span class="line">cask install google-chrome || cask upgrade google-chrome || true
</span><span class="line">cask install google-drive || cask upgrade google-drive || true
</span><span class="line">cask install google-web-designer || cask upgrade google-web-designer || true
</span><span class="line">cask install keyremap4macbook || cask upgrade keyremap4macbook || true
</span><span class="line">cask install sublime-text || cask upgrade sublime-text || true
</span><span class="line">cask install skype || cask upgrade skype || true
</span><span class="line">cask install skitch || cask upgrade skitch || true
</span><span class="line">cask install bettertouchtool || cask upgrade bettertouchtool || true
</span><span class="line">cask install bitcasa || cask upgrade bitcasa || true
</span><span class="line">cask install dropbox || cask upgrade dropbox || true
</span><span class="line">cask install evernote || cask upgrade evernote || true
</span><span class="line">cask install mendeley || cask upgrade mendeley || true
</span><span class="line">cask install mysql-workbench || cask upgrade mysql-workbench || true
</span><span class="line">cask install iterm2 || cask upgrade iterm2 || true</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-6">まとめ</h2>

<p>必要なものはこのファイルに書いていくことで必要なアプリケーションが管理出来る状態となった。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2013年版 データ集約まとめ(Buffer, IFTTT, Evernoteなど)]]></title>
    <link href="http://makotow.github.io/blog/2013/12/31/data-aggregation-2013/"/>
    <updated>2013-12-31T20:23:00+09:00</updated>
    <id>http://makotow.github.io/blog/2013/12/31/data-aggregation-2013</id>
    <content type="html"><![CDATA[<p>
2013年に構築できた情報集約の方法をまとめてみた。<br />
結果的にIFTTT, Buffer, Evernoteのすごさがわかった。
</p>

<p>
使用するデバイスが増えて主にスマフォ、タブレットで見てた記事とかをうまくまとめられなかったのが課題だったがうまく解決出来たと思う。
使ってるサービスの詳細は最後にまとめてあるリンクを参照。
</p>
<!-- more -->

<h2> Contents </h2>
<ul id="markdown-toc">
  <li><a href="#section">動機</a></li>
  <li><a href="#section-1">サービス相関図</a></li>
  <li><a href="#section-2">基本フロー</a>    <ul>
      <li><a href="#chrome--buffer--ifttt--evernote">ウェブブラウズ (Chrome) → Buffer → IFTTT → Evernote</a></li>
      <li><a href="#feedly-rsssave-for-later--ifttt---evernote">Feedly RSS(save for later) → IFTTT  → Evernote</a></li>
      <li><a href="#feedly-rssshare--buffer--ifttt--evernote">Feedly RSS(Share) → Buffer → IFTTT → Evernote</a></li>
      <li><a href="#twitter--tweevie--evernote">twitter → Tweevie → Evernote</a></li>
      <li><a href="#twitter-fav--ifttt--evernote">twitter fav → IFTTT → Evernote</a></li>
    </ul>
  </li>
  <li><a href="#section-3">おまけ</a>    <ul>
      <li><a href="#gmail-star--ifttt--evernote">Gmail star → IFTTT → Evernote</a></li>
      <li><a href="#google---ifttt--evernote">Google カレンダー特定キーワード → IFTTT → Evernote</a></li>
    </ul>
  </li>
  <li><a href="#section-4">要するに</a></li>
  <li><a href="#section-5">参考</a></li>
</ul>

<h2 id="section">動機</h2>

<p>データ集約の流れを数年前からEvernoteへ全て集めてた。
2013年は使用するデバイスが多くなったため、
いままでブラウザメインでやっていたことが他のデバイスでアクションすると情報が散らばった場所に保存される状態になっていた。</p>

<p>なんとなく形になったので2013年の記録として残しておく。</p>

<h2 id="section-1">サービス相関図</h2>

<p><img src="http://makotow.github.io/images/2013/12/data-aggregation/data-aggregation.001.png" /></p>

<h2 id="section-2">基本フロー</h2>

<h3 id="chrome--buffer--ifttt--evernote">ウェブブラウズ (Chrome) → Buffer → IFTTT → Evernote</h3>

<p>ウェブブラウズ中に気になった記事をBuffer経由で蓄積する。
PC,スマートフォン、タブレットとどの端末からでも同じフローでデータを集約できる。
情報ソースとしては「Gunosy」とか「はてぶ」とか「twitterのTL」とかいろいろ。</p>

<h3 id="feedly-rsssave-for-later--ifttt---evernote">Feedly RSS(save for later) → IFTTT  → Evernote</h3>

<p>RSSリーダーで購読しているフィードを見ている時に主に使用、スマートフォンやタブレット、英語の記事を後て読むときなどにつかう。Android版Feedlyだと長押しでできる。</p>

<h3 id="feedly-rssshare--buffer--ifttt--evernote">Feedly RSS(Share) → Buffer → IFTTT → Evernote</h3>

<p>RSSリーダーで購読しているフィードを見ている時に記事を読んだ後などに使用。
Bufferで共有すると、twitterにも自動でツイートされる。</p>

<h3 id="twitter--tweevie--evernote">twitter → Tweevie → Evernote</h3>

<p>一日分のツイートをEvernoteへ保存する。
何気なく検索するとそれっぽいものがでてくるようになる。</p>

<h3 id="twitter-fav--ifttt--evernote">twitter fav → IFTTT → Evernote</h3>

<p>twitter上で fav したものを IFTTT 経由で Evernoteへ保存する。<br />
fav は後で読もうと思ったリンク等なので、せっかくfavしたものを忘れないように。</p>

<h2 id="section-3">おまけ</h2>

<p>あまり使ってないけども、IFTTTの機能で次のようなこともできる。</p>

<h3 id="gmail-star--ifttt--evernote">Gmail star → IFTTT → Evernote</h3>

<p>GmailでスターをつけるとIFTTT経由でEvernoteのノートが作成される。
たまに使うがEvernoteに保存される状態が微妙なので別の方法を考えるかも。</p>

<h3 id="google---ifttt--evernote">Google カレンダー特定キーワード → IFTTT → Evernote</h3>

<p>カレンダーの予定に特定のキーワードを入れると IFTTT 経由で Evernoteに保存される。
仕組みは作ってみたが今のところ使いどころがない。</p>

<h2 id="section-4">要するに</h2>

<p>書いてみると Buffer と IFTTT なしではこの環境は構築できない。<br />
さらに全てを記憶するEvernote。</p>

<p>最終的には Evernote の特定のノートブックを見ればいいので散らばっていたデータをうまくまとめれてたと思う。</p>

<p>要するに Buffer、Evernote、IFTTT すげーってことです。</p>

<h2 id="section-5">参考</h2>

<ul>
  <li><a href="https://ifttt.com/">IFTTT</a></li>
  <li><a href="https://bufferapp.com/app">Buffer</a></li>
  <li><a href="http://evernote.com/intl/jp/">Evernote</a></li>
  <li><a href="https://feedly.com/">Feedly</a></li>
  <li><a href="http://twieve.net/ja">Twieve</a></li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[man の使い方]]></title>
    <link href="http://makotow.github.io/blog/2013/11/28/how-to-use-man/"/>
    <updated>2013-11-28T23:48:00+09:00</updated>
    <id>http://makotow.github.io/blog/2013/11/28/how-to-use-man</id>
    <content type="html"><![CDATA[<p>man の使い方を調べたのでメモ。
主にオプションについて。
<!-- more --></p>

<h2> Contents </h2>
<ul id="markdown-toc">
  <li><a href="#section">基本</a></li>
  <li><a href="#man-section">man 見た時のsection番号について</a></li>
  <li><a href="#section-1">特定の章を読む</a></li>
  <li><a href="#section-2">キーワードで検索したい場合</a></li>
  <li><a href="#section-3">参考</a></li>
</ul>

<h2 id="section">基本</h2>

<p>基本の使い方
調べたいコマンドを引数に指定</p>

<pre><code>% man ls
</code></pre>

<h2 id="man-section">man 見た時のsection番号について</h2>

<p>いつも調べても忘れてしまうのでメモ
個人用途では、3, 7, 8くらいは使う。</p>

<ul>
  <li>1章 汎用コマンド</li>
  <li>2章 システムコール</li>
  <li>3章 ライブラリ関数、特に標準Cライブラリ関数</li>
  <li>4章 特殊なファイル（主に /dev にあるデバイス）とドライバ</li>
  <li>5章 ファイル形式とその使用法</li>
  <li>6章 ゲームとスクリーンセーバー</li>
  <li>7章 その他</li>
  <li>8章 システム管理コマンドとデーモン</li>
</ul>

<h2 id="section-1">特定の章を読む</h2>

<pre><code>% man 3 ls
</code></pre>

<p>章番号を指定する</p>

<h2 id="section-2">キーワードで検索したい場合</h2>

<pre><code>man -k keyword
</code></pre>

<h2 id="section-3">参考</h2>

<p>man の man を読むと、結構な量のオプションが出てくる。
man -k オプションは aproposコマンドと同様の結果とか初めて知った。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MacでKindleを読む]]></title>
    <link href="http://makotow.github.io/blog/2013/11/06/kindle-on-mac/"/>
    <updated>2013-11-06T00:54:00+09:00</updated>
    <id>http://makotow.github.io/blog/2013/11/06/kindle-on-mac</id>
    <content type="html"><![CDATA[<p>下書きしてから１ヶ月放置してたけどせっかくなので公開します。</p>

<p>KindleのMacアプリはamazon.comのものしか読めないので、
アカウント統合を行うことで読めるようになるのだけども、
直接電話したりでめんどくさいので放置してた。</p>

<p>結果的にはAndroidエミュレータをインストールして、
そこにKindleアプリを入れて読むことにした。</p>

<!-- more -->

<h2> Contents </h2>
<ul id="markdown-toc">
  <li><a href="#section">動機</a></li>
  <li><a href="#section-1">導入</a></li>
  <li><a href="#section-2">仮想デバイスの作成</a></li>
  <li><a href="#section-3">起動</a></li>
  <li><a href="#section-4">類似アプリ</a></li>
</ul>

<h2 id="section">動機</h2>

<p>なんとなくAndroidエミュレータを入れて読めばいいんじゃないかとわかってから初めてみたが、
標準のAndroidSDKでは遅くて使い物にならなかかったかつPlayストアが入っていなかったりでかなり苦戦した。</p>

<h2 id="section-1">導入</h2>

<p>Genymotion を導入する。
本家サイトからダウンロードしてインストール。特に迷うところはない。</p>

<p>本家: http://www.genymotion.com/</p>

<p>ダウンロードするにはアカウントが必要なので作成する。仮想デバイスを作成する際にも必要となる。
高速なエミュレータかつGoogleアプリが初期導入済みのデバイスを使用すれば最初からPlayストアが入っている。</p>

<p>(インストール時のバージョンは1.3.0)</p>

<p>GenymotionはVirtualBox上に仮想マシンを作成するためVirtualBoxを導入する。</p>

<h2 id="section-2">仮想デバイスの作成</h2>

<p>起動した画面から「Add」ボタンクリックすると認証ダイアログが出てくるので作成したアカウントを入力。</p>

<p><img src="http://makotow.github.io/images/2013/11/Genymotion-Add.png" />
<img src="http://makotow.github.io/images/2013/11/Genymotion-Credential.png" /></p>

<p>仮想デバイスの一覧が表示される。</p>

<p><img src="http://makotow.github.io/images/2013/11/Create_a_new_virtual_device.png" /></p>

<p>好きなデバイスを選んで作成する。
この時注意することは今回はPlayストアからKindleアプリをダウンロードして本を読むことが目標なので、</p>

<pre><code>xxxx - with GoogleApps
</code></pre>

<p>となっている仮想デバイスを選ぶこと。</p>

<p><img src="http://makotow.github.io/images/2013/11/Virtual_device_creation_wizard_and_Create_a_new_virtual_device.png" />
<img src="http://makotow.github.io/images/2013/11/Virtual_device_creation_wizard.png" /></p>

<p>Next-＞Nextとボタンを押してくと、
仮想デバイスのダウンロード、チェックが開始するのでしばらくまつ。</p>

<p><img src="http://makotow.github.io/images/2013/11/Virtual_device_creation_wizard_and_Create_a_new_virtual_device_done.png" /></p>

<p>ダウンロードが終わったら名前をつけて終了。</p>

<p><img src="http://makotow.github.io/images/2013/11/Virtual_device_creation_wizard_and_Create_a_new_virtual_device_name.png" />
<img src="http://makotow.github.io/images/2013/11/Virtual_device_creation_wizard_and_Create_a_new_virtual_device_success.png" /></p>

<h2 id="section-3">起動</h2>

<p>起動時の画面に行くと仮想デバイスリストにダウンロードしたデバイスが表示されているので、
選択して　▶Play をクリックでデバイスが起動する。</p>

<p>あとはAndroid端末と同じように使うことができる。</p>

<h2 id="section-4">類似アプリ</h2>

<p>他にも次のような類似のものがあったが、
私の環境ではうまく動いてくれなかった。</p>

<ul>
  <li>BlueStacks</li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[reveal.jsを使ってみる]]></title>
    <link href="http://makotow.github.io/blog/2013/08/17/presentation-using-reveal-dot-js/"/>
    <updated>2013-08-17T19:00:00+09:00</updated>
    <id>http://makotow.github.io/blog/2013/08/17/presentation-using-reveal-dot-js</id>
    <content type="html"><![CDATA[<p>社内勉強会用の資料をつくらなかやなとおもっててプレゼンツールを探してみた。</p>

<p>PPTでやるのも…だし、Keynote使おうと思ったけどMacはないしでJavaScriptで何かできないかなと思って探してみた。</p>

<p>reveal.jsを見つけたので実際に作成する前に下調べをした時のメモを公開。</p>

<!-- more -->
<h2> Contents </h2>

<ul id="markdown-toc">
  <li><a href="#revealjs">reveal.jsとは</a></li>
  <li><a href="#section">インストール</a>    <ul>
      <li><a href="#basic-setup">Basic Setup</a></li>
      <li><a href="#full-setup">Full Setup</a></li>
    </ul>
  </li>
  <li><a href="#section-1">スライドを作成する</a>    <ul>
      <li><a href="#html">HTML</a>        <ul>
          <li><a href="#section-2">画像、リスト</a>            <ul>
              <li><a href="#section-3">画像</a></li>
              <li><a href="#section-4">リスト</a></li>
            </ul>
          </li>
        </ul>
      </li>
      <li><a href="#markdown">Markdown</a>        <ul>
          <li><a href="#markdown-">外部のMarkdown を読み込む場合</a></li>
          <li><a href="#htmlmarkdown-">HTML内にMarkdown を書く場合</a></li>
          <li><a href="#section-5">画像、リスト</a>            <ul>
              <li><a href="#section-6">画像</a></li>
              <li><a href="#section-7">リスト</a></li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li><a href="#section-8">その他</a></li>
  <li><a href="#section-9">まとめ</a></li>
</ul>

<h2 id="revealjs">reveal.jsとは</h2>
<p>HTMLでかっこいいスライドが作れるフレームワーク。
ぐいんぐいん動いてみ見た目もよい。</p>

<ul>
  <li><a href="https://github.com/hakimel/reveal.js">reveal.js</a></li>
  <li><a href="http://lab.hakim.se/reveal-js/#/">reveal.jsのデモ</a></li>
  <li><a href="https://github.com/hakimel/reveal.js/wiki/Example-Presentations">reveal.js使ったサンプル一覧</a></li>
</ul>

<h2 id="section">インストール</h2>

<h3 id="basic-setup">Basic Setup</h3>
<p>簡単な方法としては、
<a href="https://github.com/hakimel/reveal.js#basic-setup">Basic Setup</a> を参照して、<a href="https://github.com/hakimel/reveal.js/releases">https://github.com/hakimel/reveal.js/releases</a>から最新版をダウンロードしてindex.htmlを編集する。</p>

<h3 id="full-setup">Full Setup</h3>
<p>reveal.jsのフル機能を使いたい場合はこちらを使う。外部のmarkdown を取り込みたい場合などはFullSetupが必要。
<a href="https://github.com/hakimel/reveal.js#full-setup">Full Setup</a>を参照して必要なnode.js, Gruntをインストールする。
github から clone する。</p>

<pre><code>$ git clone git@github.com:hakimel/reveal.js.git
</code></pre>

<h2 id="section-1">スライドを作成する</h2>
<p>基本的にはindex.htmlを眺めているとざっくりした書き方はわかってくる。
スライドの作成方法としては次の2つがある。</p>

<ul>
  <li>HTML</li>
  <li>Markdown</li>
</ul>

<p>markdownを直接書く方法、外部ファイルのmarkdownファイルの読み込みできる。
ここではhtml, markdown の2つで、スライド作成に必要になるであろう、画像埋め込み、リストについてメモをしておく。
reveal.jsの特徴としてスライドを一次元的なものではなく2次元的にも作成できる(nested vertical slide)ものがある。</p>

<h3 id="html">HTML</h3>

<p><code>&lt;section&gt;</code> タグで一枚のスライドになる。</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;section&gt;</span>
</span><span class="line">    スライド１
</span><span class="line"><span class="nt">&lt;/section&gt;</span>
</span><span class="line"><span class="nt">&lt;section&gt;</span>
</span><span class="line">    スライド２
</span><span class="line"><span class="nt">&lt;/section&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>nested vertical slide の作成方法としては <code>&lt;section&gt;</code> タグ内に <code>&lt;section&gt;</code> タグをネストすることで実現できる。 </p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;section&gt;</span>
</span><span class="line">    スライド１
</span><span class="line">    <span class="nt">&lt;section&gt;</span>
</span><span class="line">    スライド1-1
</span><span class="line">    <span class="nt">&lt;/section&gt;</span>
</span><span class="line">    <span class="nt">&lt;section&gt;</span>
</span><span class="line">    スライド1-2
</span><span class="line">    <span class="nt">&lt;/section&gt;</span>
</span><span class="line"><span class="nt">&lt;section&gt;</span>
</span><span class="line"><span class="nt">&lt;section&gt;</span>
</span><span class="line">    スライド２
</span><span class="line"><span class="nt">&lt;/section&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="section-2">画像、リスト</h4>
<p>HTMLで記述する。</p>

<h5 id="section-3">画像</h5>
<p>画像であれば <code>&lt;img src="xxx"&gt;&lt;/img&gt;</code></p>

<h5 id="section-4">リスト</h5>
<p><code>&lt;ul&gt;&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;</code> を使用する。 </p>

<h3 id="markdown">Markdown</h3>
<p>htmlのなかにもMarkdownはかけるが、外部ファイルのMarkdownも読み込める。
スライドだけではなくて配布資料としても使いたいのでMarkdownを埋め込めるのはとてもいい機能だと思える。
ただし、外部Markdownを使うには Full Setup を実行し、grunt serve を実行する必要がある。</p>

<h4 id="markdown-">外部のMarkdown を読み込む場合</h4>
<p>外部ファイルとして用意したexample.mdを読み込む場合
スライドのセパレータとnested vertical slideのセパレータを設定。</p>

<ul>
  <li>data-separator: スライドのセパレーター</li>
  <li>data-vertical: nested vertical slide のセパレーター</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;section</span> <span class="na">data-markdown=</span><span class="s">&quot;example.md&quot;</span> <span class="na">data-separator=</span><span class="s">&quot;^\n\n\n&quot;</span> <span class="na">data-vertical=</span><span class="s">&quot;^\n\n&quot;</span><span class="nt">&gt;&lt;/section&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="htmlmarkdown-">HTML内にMarkdown を書く場合</h4>
<p>以下のように記述し、section内にMarkdownで書く。</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;section</span> <span class="na">data-markdown</span><span class="nt">&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/template&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="err">##</span> <span class="nx">Markdown</span> <span class="nx">support</span>
</span><span class="line">
</span><span class="line">    <span class="nx">For</span> <span class="nx">those</span> <span class="nx">of</span> <span class="nx">you</span> <span class="nx">who</span> <span class="nx">like</span> <span class="nx">that</span> <span class="nx">sort</span> <span class="nx">of</span> <span class="nx">thing</span><span class="p">.</span> <span class="nx">Instructions</span> <span class="nx">and</span> <span class="nx">a</span> <span class="nx">bit</span> <span class="nx">more</span> <span class="nx">info</span> <span class="nx">available</span> <span class="p">[</span><span class="nx">here</span><span class="p">](</span><span class="nx">https</span><span class="o">:</span><span class="c1">//github.com/hakimel/reveal.js#markdown).</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">    <span class="o">&lt;</span><span class="nx">section</span> <span class="nx">data</span><span class="o">-</span><span class="nx">markdown</span><span class="o">&gt;</span>
</span><span class="line">      <span class="err">##</span> <span class="nx">Markdown</span> <span class="nx">support</span>
</span><span class="line">
</span><span class="line">      <span class="nx">For</span> <span class="nx">those</span> <span class="nx">of</span> <span class="nx">you</span> <span class="nx">who</span> <span class="nx">like</span> <span class="nx">that</span> <span class="nx">sort</span> <span class="nx">of</span> <span class="nx">thing</span><span class="p">.</span>
</span><span class="line">      <span class="nx">Instructions</span> <span class="nx">and</span> <span class="nx">a</span> <span class="nx">bit</span> <span class="nx">more</span> <span class="nx">info</span> <span class="nx">available</span> <span class="p">[</span><span class="nx">here</span><span class="p">](</span><span class="nx">https</span><span class="o">:</span><span class="c1">//github.com/hakimel/reveal.js#markdown).</span>
</span><span class="line">    <span class="o">&lt;</span><span class="err">/section&gt;</span>
</span><span class="line">
</span><span class="line"><span class="nt">&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;/section&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="section-5">画像、リスト</h4>
<p>Markdownの記法で書ける。</p>

<h5 id="section-6">画像</h5>
<p><code>![Alt Text](path/to/img)</code>
ただし、画像サイズの指定ができない。指定したい場合はHTMLのimgタグを使用する。</p>

<h5 id="section-7">リスト</h5>
<p>以下のとおり</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">- ABC
</span><span class="line">- DEF
</span><span class="line">- GHI</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-8">その他</h2>
<p>画面遷移の方法、背景色の変更などはダウンロードしたディレクトリのindex.htmlをみることで理解できると思う。<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>

<h2 id="section-9">まとめ</h2>
<p>この記事ではreveal.jsでスライドを作成する前におそらく使うであろう機能、セットアップ時のメモを紹介した。</p>

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>記事に書いても本当にindex.htmlと同じことしか書けない…<a href="#fnref:1" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ScalaでIO]]></title>
    <link href="http://makotow.github.io/blog/2013/08/04/scala-file-io/"/>
    <updated>2013-08-04T23:10:00+09:00</updated>
    <id>http://makotow.github.io/blog/2013/08/04/scala-file-io</id>
    <content type="html"><![CDATA[<h2> Contents </h2>

<ul id="markdown-toc">
  <li><a href="#scala-io">Scala でファイルIO</a></li>
  <li><a href="#api">API</a>    <ul>
      <li><a href="#section">ラインごとに処理をする</a></li>
      <li><a href="#section-1">便利メソッド</a></li>
    </ul>
  </li>
  <li><a href="#try-with-resources-">try-with-resources は？</a></li>
  <li><a href="#section-2">次のお題</a></li>
</ul>

<h2 id="scala-io">Scala でファイルIO</h2>
<p>Scalaを書き始めたばかり(2009?2010?くらい)の頃はSourceイケてないよって情報ばかりだった。
今ならどのような方法があるかしらべてみた</p>

<!-- more -->

<h2 id="api">API</h2>

<p>ぱっと思いつく所で以下の２つ。</p>

<ul>
  <li>Scala の scala.io.Source</li>
  <li>Java の java.nio(nio2), java.io</li>
</ul>

<p>今回はScalaなので<a href="http://www.scala-lang.org/api/current/index.html#scala.io.Source">scala.io.Source</a>(<a href="https://github.com/scala/scala/blob/v2.10.2/src/library/scala/io/Source.scala#L1">ソース</a>)を使ってみる。<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>

<pre><code>scala-version: scala 2.10.2
</code></pre>

<h3 id="section">ラインごとに処理をする</h3>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="scala"><span class="line"><span class="c1">// ファイルから一行づつ読み込み処理をするサンプル</span>
</span><span class="line"><span class="k">val</span> <span class="n">s</span> <span class="k">=</span> <span class="nc">Source</span><span class="o">.</span><span class="n">fromFile</span><span class="o">(</span><span class="n">file</span><span class="o">)</span>
</span><span class="line"><span class="k">try</span> <span class="o">{</span>
</span><span class="line">  <span class="n">s</span><span class="o">.</span><span class="n">getLines</span><span class="o">()</span> <span class="n">foreach</span> <span class="o">{</span> <span class="n">e</span> <span class="k">=&gt;</span>
</span><span class="line">    <span class="c1">// doSomething</span>
</span><span class="line">  <span class="o">}</span>
</span><span class="line"><span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
</span><span class="line">  <span class="n">s</span><span class="o">.</span><span class="n">close</span><span class="o">()</span>
</span><span class="line"><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-1">便利メソッド</h3>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="scala"><span class="line"><span class="k">val</span> <span class="n">s</span> <span class="k">=</span> <span class="nc">Source</span><span class="o">.</span><span class="n">fromFile</span><span class="o">(</span><span class="n">file</span><span class="o">)</span>
</span><span class="line"><span class="k">try</span> <span class="o">{</span>
</span><span class="line">  <span class="n">s</span><span class="o">.</span><span class="n">getLines</span><span class="o">().</span><span class="n">take</span><span class="o">(</span><span class="mi">5</span><span class="o">)</span> <span class="n">foreach</span> <span class="o">{</span> <span class="n">e</span> <span class="k">=&gt;</span>
</span><span class="line">     <span class="c1">// 先頭5行のみ処理</span>
</span><span class="line">     <span class="c1">// do something</span>
</span><span class="line">  <span class="o">}</span>
</span><span class="line"><span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
</span><span class="line">  <span class="n">s</span><span class="o">.</span><span class="n">close</span><span class="o">()</span>
</span><span class="line"><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="scala"><span class="line"><span class="k">val</span> <span class="n">s</span> <span class="k">=</span> <span class="nc">Source</span><span class="o">.</span><span class="n">fromFile</span><span class="o">(</span><span class="n">file</span><span class="o">)</span>
</span><span class="line"><span class="k">try</span> <span class="o">{</span>
</span><span class="line">  <span class="n">s</span><span class="o">.</span><span class="n">getLines</span><span class="o">().</span><span class="n">drop</span><span class="o">(</span><span class="mi">1</span><span class="o">)</span> <span class="n">foreach</span> <span class="o">{</span> <span class="n">e</span> <span class="k">=&gt;</span>
</span><span class="line">     <span class="c1">// 先頭行を読み捨てて drop(1)</span>
</span><span class="line">     <span class="c1">// 以降をループする。</span>
</span><span class="line">     <span class="c1">// do something</span>
</span><span class="line">  <span class="o">}</span>
</span><span class="line"><span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
</span><span class="line">  <span class="n">s</span><span class="o">.</span><span class="n">close</span><span class="o">()</span>
</span><span class="line"><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>一行読み捨てとか綺麗に書ける印象。
getLinesでは<a href="http://www.scala-lang.org/api/current/index.html#scala.collection.Iterator">scala.collection.Iterator</a>(<a href="https://github.com/scala/scala/blob/v2.10.2/src/library/scala/collection/Iterator.scala#L1">ソース</a>)が返ってくるので、便利メソッドがたくさん使える。
APIを眺めているともっと綺麗にできそう。</p>

<h2 id="try-with-resources-">try-with-resources は？</h2>

<p>リソースの解放でJava7のtry-with-resourceみたいなことするにはどうしたらいいか。
Java7でできるからScalaでもと思ったけど言語仕様ではできないようだ。
やはりローンパターンを使用するみたい。
少し調べてみるとScalazのwithResource, scala-armなどがあるようだ。</p>

<p><a href="http://www.ne.jp/asahi/hishidama/home/index.html">ひしだま’s ホームページ</a>にいろいろなローンパターンがまとめられている。</p>

<ul>
  <li><a href="http://www.ne.jp/asahi/hishidama/home/tech/scala/sample/using.html">Scala using（ローンパターン)</a></li>
</ul>

<h2 id="section-2">次のお題</h2>

<p>今後派生するとしたらこんな感じ</p>

<ul>
  <li>ローンパターン、派生してScalaを通してのデザインパターン再考</li>
  <li>Scalaz, scala-arm を使用したローンパターン実装方法</li>
</ul>

<p><br /><br /></p>

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>ソースがAPIからリンク貼られててすごく便利。<a href="#fnref:1" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Technology Radar May 2013の気になるところ(1)]]></title>
    <link href="http://makotow.github.io/blog/2013/07/18/technology-radar-may-2013-hot-topic/"/>
    <updated>2013-07-18T23:50:00+09:00</updated>
    <id>http://makotow.github.io/blog/2013/07/18/technology-radar-may-2013-hot-topic</id>
    <content type="html"><![CDATA[<h2> Contents </h2>

<ul id="markdown-toc">
  <li><a href="#technology-radar-may-2013">Technology Radar May 2013</a></li>
  <li><a href="#section">気になるキーワード</a>    <ul>
      <li><a href="#infrastructure-as-code">Infrastructure as code</a></li>
      <li><a href="#d3">D3</a></li>
      <li><a href="#hystrix">Hystrix</a></li>
      <li><a href="#log-management">Log Management</a></li>
      <li><a href="#gatling">Gatling</a></li>
      <li><a href="#section-1">その他気になったところ</a></li>
    </ul>
  </li>
  <li><a href="#section-2">終わりに</a></li>
</ul>

<h2 id="technology-radar-may-2013">Technology Radar May 2013</h2>

<p>もう、２ヶ月もまえだが、Technology Radar May 2013が公開された。
興味があるキーワードを自分なりに調べてみた。
タイトルが（1）となっているのは気になるものをすべて書こうとしてなかなか記事がアップできなかったので1記事2,3トピックで挙げるようにした。</p>

<p>もしかすると（2）、（3）と続くかもしれない。興味があるものはおおいけど記事を作成する時間がなかなか取れないでとりあえず軽い内容でアップ。</p>

<p>一応、簡単な説明。
Tehnology Radar は ThoughWorks社が半年に1回、技術トレンドの調査結果を公開しているもの。
自分が読んでいる目的としては現在どのようなテクノロジーがあり、どれほど浸透しているかの確認や、
新しいモノを見つけるために読んでいる。
<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>

<ul>
  <li><a href="http://www.thoughtworks.com/radar">Technology Radar May 2013</a></li>
  <li><a href="http://thoughtworks.fileburst.com/assets/technology-radar-may-2013.pdf">Technology Radar May 2013(PDF版)</a></li>
</ul>

<!-- more -->

<h2 id="section">気になるキーワード</h2>
<p>特に目を引いたもの、興味のあるものについて調べてみた。</p>

<h3 id="infrastructure-as-code">Infrastructure as code</h3>
<p>Continuous Delivery と DevOps についてたかいところまで到達している。
infrastructure as code と
infrastructure as code 、最近VergentやらChef, Puppetなどでインフラの自動化につく記事も多く見るようになってきた。</p>

<h3 id="d3">D3</h3>
<p>コンテキストから察するに、おそらくこれのこと(最後のReference)
<a href="http://d3js.org/">Data-Driven Documents</a>
少しGalleryをみてみるとこんなにも綺麗に可視化できるものかと思ってしまった。</p>

<h3 id="hystrix">Hystrix</h3>
<p>キーワードだけ。
調べてはいない。</p>

<p><a href="https://github.com/Netflix/Hystrix">Hystrix: Latency and Fault Tolerance for Distributed Systems</a></p>

<h3 id="log-management">Log Management</h3>

<p>ログの収集、集約、検索、フィルタのテクノロジー。（だと思う…）</p>

<ul>
  <li><a href="http://logstash.net/">Logstash</a></li>
  <li><a href="http://graylog2.org/">Graylog2</a></li>
</ul>

<h3 id="gatling">Gatling</h3>
<p><a href="http://gatling-tool.org/">Gatling Project - stress tool</a></p>

<p>Gatlingはパフォーマンステストのツール。
Scalaで書かれている。</p>

<h3 id="section-1">その他気になったところ</h3>
<ul>
  <li>Chef, PuppetがWindows対応.OctopusはWindos専用で作成されている。</li>
</ul>

<h2 id="section-2">終わりに</h2>
<p>Technoogy　Radarって日本語訳の需要あるかな。
日本語にするって難しい。</p>

<p><a href="http://martinfowler.com/articles/radar-faq.html">ThoughtWorks Technology Radar FAQ</a>
を読むことで詳細を理解することができる。</p>

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>Technology Radarからリンクされている、<a href="#fnref:1" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IntelliJ で ScalaTest]]></title>
    <link href="http://makotow.github.io/blog/2013/07/18/scala-intellij-idea-scalatest/"/>
    <updated>2013-07-18T00:10:00+09:00</updated>
    <id>http://makotow.github.io/blog/2013/07/18/scala-intellij-idea-scalatest</id>
    <content type="html"><![CDATA[<h2> Contents </h2>

<ul id="markdown-toc">
  <li><a href="#section">概要</a></li>
  <li><a href="#sample-code">Sample Code</a>    <ul>
      <li><a href="#vec-trait">Vec trait</a></li>
      <li><a href="#vectest">VecTest</a></li>
    </ul>
  </li>
  <li><a href="#intellij-">IntelliJ からテスト実行</a></li>
</ul>

<h2 id="section">概要</h2>
<p><a href="http://makotow.github.io/blog/2013/07/01/sbt-intellij-idea/">sbt で IntelliJのプロジェクトを作成</a> <br />
<a href="http://makotow.github.io/blog/2013/07/03/sbt-intellij-idea-add-librarydependencies/">sbt で IntelliJのプロジェクトを作成(依存ライブラリ追加編)</a> </p>

<p>の続きでIntelliJプロジェクトにScalaTestを追加したのでテストを書いてIntelliJのsbtconsoleからコンパイル、実行、テストをやってみる。</p>

<p>書いている現在の各バージョン</p>

<ul>
  <li>IntelliJ 12</li>
  <li>Scala 2.10.2</li>
  <li>ScalaTest 1.9.1</li>
</ul>

<!-- more -->

<h2 id="sample-code">Sample Code</h2>

<h3 id="vec-trait">Vec trait</h3>

<p>ベクトルの計算をする小さなプログラムを作った。
内積とnormを求める機能。<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Vec </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="scala"><span class="line"><span class="k">trait</span> <span class="nc">Vec</span> <span class="o">{</span>
</span><span class="line">  <span class="k">def</span> <span class="n">dot</span><span class="o">(</span><span class="n">a</span><span class="k">:</span> <span class="kt">List</span><span class="o">[</span><span class="kt">Double</span><span class="o">],</span> <span class="n">b</span><span class="k">:</span> <span class="kt">List</span><span class="o">[</span><span class="kt">Double</span><span class="o">])</span> <span class="k">=</span> <span class="o">((</span><span class="n">a</span> <span class="n">zip</span> <span class="n">b</span><span class="o">).</span><span class="n">map</span> <span class="o">{</span><span class="k">case</span> <span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">)</span> <span class="k">=&gt;</span> <span class="n">x</span> <span class="o">*</span> <span class="n">y</span> <span class="o">}</span> <span class="o">:\</span> <span class="mf">0.0</span> <span class="o">)</span> <span class="o">{</span> <span class="k">_</span> <span class="o">+</span> <span class="k">_</span> <span class="o">}</span>
</span><span class="line">  <span class="k">def</span> <span class="n">norm</span><span class="o">(</span><span class="n">l</span><span class="k">:</span> <span class="kt">List</span><span class="o">[</span><span class="kt">Double</span><span class="o">])</span> <span class="k">=</span> <span class="nc">Math</span><span class="o">.</span><span class="n">sqrt</span><span class="o">((</span><span class="mf">0.0</span> <span class="o">/:</span> <span class="n">l</span><span class="o">.</span><span class="n">map</span><span class="o">(</span><span class="n">x</span> <span class="k">=&gt;</span> <span class="n">x</span> <span class="o">*</span> <span class="n">x</span><span class="o">))</span> <span class="o">{</span><span class="k">_</span> <span class="o">+</span> <span class="k">_</span><span class="o">})</span>
</span><span class="line"><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="vectest">VecTest</h3>

<p>ScalaTestの使い方は本家を参照</p>

<ul>
  <li><a href="http://www.scalatest.org/" title="ScalaTest本家">ScalaTest</a></li>
</ul>

<p>以下、本家より引用
&gt; ScalaTest supports three main styles of testing out of the box. If you don’t have a preference, start with FunSuite:</p>

<blockquote>
  <p>For test-driven development (TDD) start with FunSuite <br />
For behavior-driven development (BDD), start with FunSpec<br />
For functional, integration, or acceptance testing, start with FeatureSpec<br /></p>
</blockquote>

<p>主に３つのテストの書き方ができる
今回は慣れているJUnit風の書き方。</p>

<p>JUnitのコードを見たことがあればソースから理解できると思う。<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>VecTest </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
</pre></td><td class="code"><pre><code class="scala"><span class="line"><span class="k">import</span> <span class="nn">org.scalatest._</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">VecTest</span> <span class="k">extends</span> <span class="nc">FunSuite</span> <span class="o">{</span>
</span><span class="line">
</span><span class="line">  <span class="n">test</span><span class="o">(</span><span class="s">&quot;dot product&quot;</span><span class="o">)</span> <span class="o">{</span>
</span><span class="line">    <span class="k">val</span> <span class="n">v1</span> <span class="k">=</span> <span class="nc">List</span><span class="o">(</span><span class="mf">1.0</span><span class="o">,</span> <span class="mf">3.0</span><span class="o">,</span> <span class="o">-</span><span class="mf">5.0</span><span class="o">)</span>
</span><span class="line">    <span class="k">val</span> <span class="n">v2</span> <span class="k">=</span> <span class="nc">List</span><span class="o">(</span><span class="mf">4.0</span><span class="o">,</span> <span class="o">-</span><span class="mf">2.0</span><span class="o">,</span> <span class="o">-</span><span class="mf">1.0</span><span class="o">)</span>
</span><span class="line">    <span class="k">val</span> <span class="n">vec</span> <span class="k">=</span> <span class="k">new</span> <span class="nc">Vec</span><span class="o">{}</span>
</span><span class="line">    <span class="n">assert</span><span class="o">(</span><span class="mi">3</span> <span class="o">===</span> <span class="n">vec</span><span class="o">.</span><span class="n">dot</span><span class="o">(</span><span class="n">v1</span> <span class="o">,</span><span class="n">v2</span><span class="o">))</span>
</span><span class="line">  <span class="o">}</span>
</span><span class="line">
</span><span class="line">  <span class="n">test</span><span class="o">(</span><span class="s">&quot;norm&quot;</span><span class="o">)</span> <span class="o">{</span>
</span><span class="line">    <span class="k">val</span> <span class="n">v1</span> <span class="k">=</span> <span class="nc">List</span><span class="o">(</span><span class="mf">1.0</span><span class="o">,</span> <span class="mf">3.0</span><span class="o">,</span> <span class="o">-</span><span class="mf">5.0</span><span class="o">)</span>
</span><span class="line">    <span class="k">val</span> <span class="n">vec</span> <span class="k">=</span> <span class="k">new</span> <span class="nc">Vec</span><span class="o">{}</span>
</span><span class="line">
</span><span class="line">    <span class="n">assert</span><span class="o">(</span><span class="nc">Math</span><span class="o">.</span><span class="n">sqrt</span><span class="o">(</span><span class="mi">35</span><span class="o">)</span> <span class="o">===</span> <span class="n">vec</span><span class="o">.</span><span class="n">norm</span><span class="o">(</span><span class="n">v1</span><span class="o">))</span>
</span><span class="line">  <span class="o">}</span>
</span><span class="line"><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="intellij-">IntelliJ からテスト実行</h2>
<p>今回はIntelliJ のプラグインである SBT Consoleを使用する。
コンソールからsbtを実行するのと同じ。</p>

<ol>
  <li>SBT Consoleからsbt起動 
<img src="http://makotow.github.io/images/2013/07/ScalaTest.png" /></li>
  <li>コマンド入力エリアへsbtコマンドを入力し実行
<img src="http://makotow.github.io/images/2013/07/ScalaTest-sbtcmd.png" /></li>
  <li>テスト実行後、結果出力
<img src="http://makotow.github.io/images/2013/07/ScalaTest-testresult.png" /></li>
</ol>

<p>上記の例では ~test でやっているがもちろん、run, test, compielなども実行可能。
## 雑感
SBT Console使うことでIntelliJ内で完結するのは便利だと思う。</p>

<p>もう少しネタ見つけて続ける。(コード片とか学んだこととか…)</p>

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>trait にしたのはなんとなく使ってみたいから…。object にすべきか traitにすべきかの判断はScala力が不足していてピンとこないので、とりあえずどのようなにつかえるかを試している最中。<a href="#fnref:1" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:2">
      <p>dot productのコードは本当は v1 dot v2 とか書きたい。Scala力が不足…<a href="#fnref:2" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sbt で IntelliJのプロジェクトを作成(依存ライブラリ追加編)]]></title>
    <link href="http://makotow.github.io/blog/2013/07/03/sbt-intellij-idea-add-librarydependencies/"/>
    <updated>2013-07-03T00:14:00+09:00</updated>
    <id>http://makotow.github.io/blog/2013/07/03/sbt-intellij-idea-add-librarydependencies</id>
    <content type="html"><![CDATA[<h2> Contents </h2>

<ul id="markdown-toc">
  <li><a href="#section">概要</a></li>
  <li><a href="#section-1">前回の作業内容</a></li>
  <li><a href="#section-2">今日やること（依存ライブラリの追加）</a></li>
</ul>

<h2 id="section">概要</h2>

<p><a href="http://makotow.github.io/blog/2013/07/01/sbt-intellij-idea/">sbt で IntelliJのプロジェクトを作成</a> で作成したプロジェクトに依存ライブラリを追加する方法の記録。</p>

<p>今回はScalaTestを導入。
<!-- more --></p>

<h2 id="section-1">前回の作業内容</h2>
<p><a href="http://makotow.github.io/blog/2013/07/01/sbt-intellij-idea/">sbt で IntelliJのプロジェクトを作成</a> の成果</p>

<ul>
  <li>sbtでIntelliJのプロジェクトを作った</li>
</ul>

<h2 id="section-2">今日やること（依存ライブラリの追加）</h2>

<ul>
  <li>依存するライブラリをsbtで定義しIntelliJ用の定義ファイルを再生成する。</li>
  <li>build.sbtをPROJECT_DIR に作成 (PROJECT_DIRはプロジェクトディレクトリ)</li>
</ul>

<p>build.sbt は次の内容これがわかれば他にも応用出来るはず。
<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>

<div><script src="https://gist.github.com/5910249.js"></script>
<noscript><pre><code /></pre></noscript></div>

<p>以下手順</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class=""><span class="line">cd PROJECT_DIR
</span><span class="line">sbt
</span><span class="line">&gt; reload
</span><span class="line">&gt; update
</span><span class="line">&gt; gen-idea</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>IntelliJを開いていると自動的に変更を検知してリロードしてくれる。
libraryDependenciesにscalatestを追加され、ScalaTestがつえるようになる。
これでひと通りソース書いてテストができる。</p>

<p>このシリーズ、きっとまだ続く。</p>

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>sbtのplugin.sbt, build.sbtはいつも調べてその場では理解するが忘れてしまう…<a href="#fnref:1" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sbt で IntelliJのプロジェクトを作成]]></title>
    <link href="http://makotow.github.io/blog/2013/07/01/sbt-intellij-idea/"/>
    <updated>2013-07-01T23:30:00+09:00</updated>
    <id>http://makotow.github.io/blog/2013/07/01/sbt-intellij-idea</id>
    <content type="html"><![CDATA[<h2> Contents </h2>

<ul id="markdown-toc">
  <li><a href="#section">手順</a></li>
</ul>

<p>タイトルの通り、sbtでIntelliJのプロジェクトを作成する方法を記載。
今までな何度も調べたが毎回忘れるのでメモ。</p>

<p>簡単なプロジェクトを作りたいときなどに使用。
ある程度大きなものを作る場合はきちんとsbtで設定するはず。
<!-- more -->
## 必要なもの</p>

<p>IntelliJ のプロジェクトを作成する、sbtプラグインが必要。
plugin の導入はproject/plugins.sbtに addSbtPlugin(….)を書いておけばよい。</p>

<ul>
  <li>sbt(0.12.x)</li>
  <li>sbt-plugin (1.4.0) (<a href="https://github.com/mpeltonen/sbt-idea">sbt-idea</a>)</li>
</ul>

<h2 id="section">手順</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class=""><span class="line">mkdir PROJECT_DIR
</span><span class="line">cd PROJECT_DIR
</span><span class="line">mkdir porject
</span><span class="line">echo 'addSbtPlugin("com.github.mpeltonen" % "sbt-idea" % "1.4.0")' &gt;&gt; project/plugins.sbt
</span><span class="line">sbt
</span><span class="line">gen-idea</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
</feed>
